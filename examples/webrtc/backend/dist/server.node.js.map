{
  "version": 3,
  "sources": ["../../../node_modules/better-sse/build/index.js", "../../../node_modules/ws/lib/stream.js", "../../../node_modules/ws/lib/constants.js", "../../../node_modules/ws/lib/buffer-util.js", "../../../node_modules/ws/lib/limiter.js", "../../../node_modules/ws/lib/permessage-deflate.js", "../../../node_modules/ws/lib/validation.js", "../../../node_modules/ws/lib/receiver.js", "../../../node_modules/ws/lib/sender.js", "../../../node_modules/ws/lib/event-target.js", "../../../node_modules/ws/lib/extension.js", "../../../node_modules/ws/lib/websocket.js", "../../../node_modules/ws/lib/subprotocol.js", "../../../node_modules/ws/lib/websocket-server.js", "../../../../Graph.ts", "../../../services/Service.ts", "../../../routers/Router.ts", "../../../routers/users/User.router.ts", "../../../services/http/HTTP.node.ts", "../../../services/sse/SSE.node.ts", "../../../node_modules/ws/wrapper.mjs", "../../../services/wss/WSS.node.ts", "../server.ts"],
  "sourcesContent": ["!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var s=t();for(var i in s)(\"object\"==typeof exports?exports:e)[i]=s[i]}}(global,(function(){return(()=>{\"use strict\";var e={n:t=>{var s=t&&t.__esModule?()=>t.default:()=>t;return e.d(s,{a:s}),s},d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};e.r(t),e.d(t,{Channel:()=>d,Session:()=>a,createChannel:()=>c,createSession:()=>l});const s=require(\"crypto\"),i=require(\"events\");var n=e.n(i);class r extends(n()){addListener(e,t){return super.addListener(e,t)}prependListener(e,t){return super.prependListener(e,t)}prependOnceListener(e,t){return super.prependOnceListener(e,t)}on(e,t){return super.on(e,t)}once(e,t){return super.once(e,t)}emit(e,...t){return super.emit(e,...t)}off(e,t){return super.off(e,t)}removeListener(e,t){return super.removeListener(e,t)}}const o=e=>JSON.stringify(e),h=e=>{let t=e;return t=t.replace(/(\\r\\n|\\r|\\n)/g,\"\\n\"),t=t.replace(/\\n+$/g,\"\"),t};class a extends r{constructor(e,t,i={}){var n,r,a,l,d,c,u;super(),this.lastId=\"\",this.isConnected=!1,this.state={},this.onConnected=()=>{var e,t,s;const i=`http://${this.req.headers.host}${this.req.url}`,n=new URL(i).searchParams;if(this.trustClientEventId){const i=null!==(s=null!==(t=null!==(e=this.req.headers[\"last-event-id\"])&&void 0!==e?e:n.get(\"lastEventId\"))&&void 0!==t?t:n.get(\"evs_last_event_id\"))&&void 0!==s?s:\"\";this.lastId=i}Object.entries(this.headers).forEach((([e,t])=>{this.res.setHeader(e,null!=t?t:\"\")})),this.res.statusCode=this.statusCode,this.res.setHeader(\"Content-Type\",\"text/event-stream\"),this.res.setHeader(\"Cache-Control\",\"no-cache, no-transform\"),this.res.setHeader(\"Connection\",\"keep-alive\"),this.res.flushHeaders(),n.has(\"padding\")&&this.comment(\" \".repeat(2049)).dispatch(),n.has(\"evs_preamble\")&&this.comment(\" \".repeat(2056)).dispatch(),null!==this.initialRetry&&this.retry(this.initialRetry).dispatch(),null!==this.keepAliveInterval&&(this.keepAliveTimer=setInterval(this.keepAlive,this.keepAliveInterval)),this.isConnected=!0,this.emit(\"connected\")},this.onDisconnected=()=>{this.keepAliveTimer&&clearInterval(this.keepAliveTimer),this.isConnected=!1,this.emit(\"disconnected\")},this.writeField=(e,t)=>{const s=`${e}:${this.sanitize(t)}\\n`;return this.res.write(s),this},this.keepAlive=()=>{this.comment().dispatch()},this.dispatch=()=>(this.res.write(\"\\n\"),this),this.data=e=>{const t=this.serialize(e);return this.writeField(\"data\",t),this},this.id=e=>{const t=e||\"\";return this.writeField(\"id\",t),this.lastId=t,this},this.retry=e=>{const t=e.toString();return this.writeField(\"retry\",t),this},this.comment=e=>(this.writeField(\"\",null!=e?e:\"\"),this),this.push=(e,t,i)=>(t||(t=\"message\"),i||(i=(0,s.randomBytes)(4).toString(\"hex\")),this.event(t).id(i).data(e).dispatch(),this.emit(\"push\",e,t,i),this),this.stream=async(e,t={})=>{const{eventName:s=\"stream\"}=t;return new Promise(((t,i)=>{e.on(\"data\",(e=>{let t;t=Buffer.isBuffer(e)?e.toString():e,this.push(t,s)})),e.once(\"end\",(()=>t(!0))),e.once(\"close\",(()=>t(!0))),e.once(\"error\",(e=>i(e)))}))},this.iterate=async(e,t={})=>{const{eventName:s=\"iteration\"}=t;for await(const t of e)this.push(t,s)},this.req=e,this.res=t,this.serialize=null!==(n=i.serializer)&&void 0!==n?n:o,this.sanitize=null!==(r=i.sanitizer)&&void 0!==r?r:h,this.trustClientEventId=null===(a=i.trustClientEventId)||void 0===a||a,this.initialRetry=null===i.retry?null:null!==(l=i.retry)&&void 0!==l?l:2e3,this.keepAliveInterval=null===i.keepAlive?null:null!==(d=i.keepAlive)&&void 0!==d?d:1e4,this.statusCode=null!==(c=i.statusCode)&&void 0!==c?c:200,this.headers=null!==(u=i.headers)&&void 0!==u?u:{},this.req.on(\"close\",this.onDisconnected),setImmediate(this.onConnected)}event(e){return this.writeField(\"event\",e),this}}const l=(...e)=>new Promise((t=>{const s=new a(...e);s.once(\"connected\",(()=>{t(s)}))}));class d extends r{constructor(){super(),this.state={},this.sessions=[],this.broadcast=(e,t,s={})=>{t||(t=\"message\");const i=s.filter?this.sessions.filter(s.filter):this.sessions;for(const s of i)s.push(e,t);return this.emit(\"broadcast\",e,t),this}}get activeSessions(){return this.sessions}get sessionCount(){return this.sessions.length}register(e){if(!e.isConnected)throw new Error(\"Cannot register a non-active session.\");return e.once(\"disconnected\",(()=>{this.deregister(e),this.emit(\"session-disconnected\",e)})),this.sessions.push(e),this.emit(\"session-registered\",e),this}deregister(e){return this.sessions=this.sessions.filter((t=>t!==e)),this.emit(\"session-deregistered\",e),this}}const c=(...e)=>new d(...e);return t})()}));\n//# sourceMappingURL=index.js.map", "'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n", "'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n", "'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n\n  module.exports = {\n    concat,\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    },\n    toArrayBuffer,\n    toBuffer,\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    }\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    concat,\n    mask: _mask,\n    toArrayBuffer,\n    toBuffer,\n    unmask: _unmask\n  };\n}\n", "'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n", "'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n", "'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8(buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    },\n    tokenChars\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8: _isValidUTF8,\n    tokenChars\n  };\n}\n", "'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n", "'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options = {}) {\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = listener;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n  let invalidURLMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isUnixSocket) {\n    invalidURLMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isUnixSocket && !parsedUrl.pathname) {\n    invalidURLMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidURLMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidURLMessage) {\n    const err = new SyntaxError(invalidURLMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket',\n    ...opts.headers\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalSecure = isSecure;\n      websocket._originalHost = parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = parsedUrl.host === websocket._originalHost;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    if (res.headers.upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  req.end();\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst net = require('net');\nconst tls = require('tls');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!key || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n", "//another method\r\nexport function getFnParamNames(fn):string[]{ //https://stackoverflow.com/questions/9091838/get-function-parameter-names-for-interface-purposes\r\n    var fstr = fn.toString();\r\n    return fstr.match(/\\(.*?\\)/)[0].replace(/[()]/gi,'').replace(/\\s/gi,'').split(',');\r\n}\r\n\r\nexport function parseFunctionFromText(method='') {\r\n    //Get the text inside of a function (regular or arrow);\r\n    let getFunctionBody = (methodString) => {\r\n        return methodString.replace(/^\\W*(function[^{]+\\{([\\s\\S]*)\\}|[^=]+=>[^{]*\\{([\\s\\S]*)\\}|[^=]+=>(.+))/i, '$2$3$4');\r\n    }\r\n\r\n    let getFunctionHead = (methodString) => {\r\n        let startindex = methodString.indexOf(')');\r\n        return methodString.slice(0, methodString.indexOf('{',startindex) + 1);\r\n    }\r\n\r\n    let newFuncHead = getFunctionHead(method);\r\n    let newFuncBody = getFunctionBody(method);\r\n\r\n    let newFunc;\r\n    if (newFuncHead.includes('function ')) {\r\n        let varName = newFuncHead.split('(')[1].split(')')[0]\r\n        newFunc = new Function(varName, newFuncBody);\r\n    } else {\r\n        if(newFuncHead.substring(0,6) === newFuncBody.substring(0,6)) {\r\n        //newFuncBody = newFuncBody.substring(newFuncHead.length);\r\n        let varName = newFuncHead.split('(')[1].split(')')[0]\r\n        //console.log(varName, newFuncHead ,newFuncBody);\r\n        newFunc = new Function(varName, newFuncBody.substring(newFuncBody.indexOf('{')+1,newFuncBody.length-1));\r\n        }\r\n        else {\r\n        try {newFunc = eval(newFuncHead + newFuncBody + \"}\");} catch {}\r\n        }\r\n    }\r\n\r\n    return newFunc;\r\n\r\n}\r\n\r\n//just a more typical hierarchical graph tree with back and forward prop and arbitrary \r\n// go-here-do-that utilities. Create an object node tree and make it do... things \r\n// same setup as sequencer but object/array/tag only (no functions), and can add arbitrary properties to mutate on objects\r\n// or propagate to children/parents with utility calls that get added to the objects\r\n//Joshua Brewster and Garrett Flynn AGPLv3.0\r\n\r\nexport type OperatorType = ( //can be async\r\n    self:GraphNode,  //'this' node\r\n    origin:string|GraphNode|Graph, //origin node\r\n    ...args:any //input arguments, e.g. output from another node\r\n)=>any|void\r\n\r\nexport type Tree = {\r\n    [key:string]: //the key becomes the node tag on the graph\r\n        GraphNode |\r\n        GraphNodeProperties |\r\n        OperatorType |\r\n        ((...args)=>any|void) |\r\n        { aliases:string[] } & GraphNodeProperties\r\n}\r\n\r\n//properties input on GraphNode or add, or for children\r\nexport type GraphNodeProperties = {\r\n    tag?:string, //generated if not specified, or use to get another node by tag instead of generating a new one\r\n    operator?:OperatorType|((...args)=>any|void), //Operator to handle I/O on this node. Returned inputs can propagate according to below settings\r\n    forward?:boolean, //pass output to child nodes\r\n    backward?:boolean, //pass output to parent node\r\n    children?:string|GraphNodeProperties|GraphNode|(GraphNodeProperties|GraphNode|string)[], //child node(s), can be tags of other nodes, properties objects like this, or GraphNodes, or null\r\n    parent?:GraphNode|undefined, //parent graph node\r\n    delay?:false|number, //ms delay to fire the node\r\n    repeat?:false|number, // set repeat as an integer to repeat the input n times, cmd will be the number of times the operation has been repeated\r\n    recursive?:false|number, //or set recursive with an integer to pass the output back in as the next input n times, cmd will be the number of times the operation has been repeated\r\n    frame?:boolean, //true or false. If repeating or recursing, execute on requestAnimationFrame? Careful mixing this with animate:true\r\n    animate?:boolean, //true or false, run the operation on an animationFrame loop?\r\n    loop?:false|number, //milliseconds or false, run the operation on a loop?\r\n    animation?: OperatorType | undefined, //if it outputs something not undefined it will trigger parent/child operators\r\n    looper?: OperatorType | undefined, //if it outputs something not undefined it will trigger parent/child operators\r\n    [key:string]:any //add whatever variables and utilities\r\n}; //can specify properties of the element which can be subscribed to for changes.\r\n\r\n\r\n\r\n//TODO: try to reduce the async stack a bit for better optimization, though in general it is advantageous matter as long as node propagation isn't \r\n//   relied on for absolute maximal performance concerns, those generally require custom solutions e.g. matrix math or clever indexing, but this can be used as a step toward that.\r\n\r\n//a graph representing a callstack of nodes which can be arranged arbitrarily with forward and backprop or propagation to wherever\r\nexport const state = {\r\n    pushToState:{},\r\n    data:{},\r\n    triggers:{},\r\n    setState(updateObj){\r\n        \r\n        Object.assign(state.data, updateObj);\r\n\r\n        for (const prop of Object.getOwnPropertyNames(updateObj)) {\r\n            if (state.triggers[prop]) state.triggers[prop].forEach((obj) => obj.onchange(state.data[prop]));\r\n        }\r\n\r\n        return state.data;\r\n    },\r\n    subscribeTrigger(key,onchange:(res:any)=>void){\r\n        if(key) {\r\n            if(!state.triggers[key]) {\r\n                state.triggers[key] = [];\r\n            }\r\n            let l = state.triggers[key].length;\r\n            state.triggers[key].push({idx:l, onchange});\r\n            return state.triggers[key].length-1;\r\n        } else return undefined;\r\n    },\r\n    unsubscribeTrigger(key,sub){\r\n        let idx = undefined;\r\n        let triggers = state.triggers[key]\r\n        if (triggers){\r\n            if(!sub) delete state.triggers[key];\r\n            else {\r\n                let obj = triggers.find((o)=>{\r\n                    if(o.idx===sub) {return true;}\r\n                });\r\n                if(obj) triggers.splice(idx,1);\r\n                return true;\r\n            }\r\n        }\r\n    },\r\n    subscribeTriggerOnce(key=undefined,onchange:(res:any)=>void) {\r\n        let sub;\r\n        let changed = (value) => {\r\n            onchange(value);\r\n            state.unsubscribeTrigger(key,sub);\r\n        }\r\n\r\n        sub = state.subscribeTrigger(key,changed);\r\n    }\r\n}\r\n\r\n\r\n  /**\r\n   * Creates new instance of a GraphNode\r\n   * The methods of this class can be referenced in the operator after setup for more complex functionality\r\n   * \r\n   * ```typescript\r\n   * const graph = new GraphNode({custom: 1, operator: (self, origin, input) => console.log(input, self.custom)});\r\n   * ```\r\n   */\r\n\r\nexport class GraphNode {\r\n\r\n    nodes = new Map()\r\n    attributes = new Set()\r\n\r\n    tag;\r\n    parent;\r\n    children;\r\n    graph;\r\n    state = state; //shared trigger state\r\n    isLooping = false;\r\n    isAnimating = false;\r\n    looper = undefined; //loop function, uses operator if undefined (with cmd 'loop');\r\n    animation = undefined; //animation function, uses operator if undefined (with cmd 'animate')\r\n    forward = true; /// propagate outputs to children?\r\n    backward = false; //propagate outputs to parents?\r\n    runSync = false;\r\n    firstRun = true;\r\n\r\n    [x:string]: any; // any additional attribute\r\n\r\n    constructor(\r\n        properties:GraphNodeProperties|OperatorType|((...args)=>any|void)={}, \r\n        parentNode?:GraphNode, \r\n        graph?:Graph\r\n    ) {    \r\n\r\n        if(typeof properties === 'function') { //pass a function instead of properties to set up a functional graph quickly\r\n            properties = { operator:properties as any };\r\n        }\r\n\r\n        if(typeof properties === 'object') {\r\n            if(properties?.operator) {\r\n\r\n                let params = getFnParamNames(properties.operator);\r\n\r\n                //we can pass other formatted functions in as operators and they will be wrapped to assume they don't use self/node or origin/router, but will still work in the flow graph logic calls\r\n                if(!(params[0] == 'self' || params[0] == 'node' || params[1] == 'origin' || params[1] == 'parent' || params[1] == 'graph' || params[1] == 'router')) {\r\n                    let fn = properties.operator;\r\n                    //wrap the simplified operator to fit our format\r\n                    properties.operator = (self:GraphNode,origin:string|GraphNode|Graph,...args) => {\r\n                        return (fn as any)(...args);\r\n                    }\r\n                }\r\n\r\n            }\r\n            \r\n            // const keys = Object.keys(this)\r\n            // const prohibited = ['tag', 'parent', 'graph', 'children', 'operator']    \r\n            // for (let key in properties){\r\n            //     if (!keys.includes(key) && !prohibited.includes(key)) this.attributes.add(key)\r\n            // }\r\n    \r\n            if(!properties.tag && graph) {\r\n                properties.tag = `node${graph.nNodes}`; //add a sequential id to find the node in the tree \r\n            }\r\n            else if(!properties.tag) {\r\n                properties.tag = `node${Math.floor(Math.random()*10000000000)}`; //add a random id for the top index if none supplied\r\n            }    \r\n\r\n            // for(const prop in properties) {\r\n            //     if(!(prop in this)) {\r\n            //         Object.defineProperty(this, prop,\r\n            //         {\r\n            //             enumerable : true, \r\n            //             configurable : true, \r\n            //             set: function(v) {\r\n            //                 this.firstRun = true; this[prop] = v; \r\n            //             } //reset firstrun if graph properties are changed so it can update flow logic potentially\r\n            //         });\r\n            //         this[prop] = properties[prop];\r\n            //     }\r\n            //     else this[prop] = properties[prop];\r\n            // }\r\n            Object.assign(this,properties); //set the node's props as this\r\n        }\r\n        else if(graph) {\r\n            this.tag = `node${graph.nNodes}`;\r\n        } else {\r\n            this.tag = `node${Math.floor(Math.random()*10000000000)}`;\r\n        }\r\n        \r\n        this.parent=parentNode;\r\n        this.graph=graph;\r\n    \r\n        if(graph) {\r\n            graph.nNodes++;\r\n            graph.nodes.set(this.tag,this);\r\n        }\r\n    \r\n        if(this.children) this.convertChildrenToNodes(this);\r\n\r\n    }\r\n    \r\n    // I/O scheme for this node in the graph\r\n    operator = (self:GraphNode=this, origin:string|GraphNode|Graph, ...args:any[]) => {\r\n        return args as any;\r\n    }\r\n    \r\n    //run the operator\r\n    runOp = (\r\n        node:GraphNode=this,\r\n        origin:string|GraphNode|Graph=this, // Options: this, this.parent, this.children[n], or an arbitrary node that is subscribed to.\r\n        ...args:any[]\r\n    ) => {\r\n        let result = node.operator(node,origin,...args);\r\n        if(result instanceof Promise) {\r\n            result.then((res) => {\r\n                this.setState({[node.tag]:res})\r\n                return res;\r\n            })\r\n        }\r\n        else {\r\n            this.setState({[node.tag]:result});\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Runs the graph and passes output to connected graphs\r\n     *\r\n     * ```typescript\r\n     * const res = await graph.run(arg1, arg2, arg3);\r\n     * ```\r\n     */   \r\n\r\n    run = (...args:any[]) => {\r\n        return this._run(this,undefined,...args); //will be a promise\r\n    }\r\n\r\n    _run = (\r\n        node:GraphNode=this, \r\n        origin:string|GraphNode|Graph, \r\n        ...args:any[]\r\n    ) => {\r\n        // NOTE: Should create a sync version with no promises (will block but be faster)\r\n\r\n        if(typeof node === 'string') { //can pass the node tag instead\r\n                let fnd;\r\n                if(this.graph) fnd = this.graph.nodes.get(node);\r\n                if(!fnd) fnd = this.nodes.get(node);\r\n                node = fnd;\r\n        }\r\n        \r\n        if(!node) return undefined;\r\n\r\n        //console.log('running node ', node.tag, 'children: ', node.children);\r\n            \r\n        //can add an animationFrame coroutine, one per node //because why not\r\n        if(node.firstRun) {\r\n            if(\r\n                !( \r\n                   (node.children && node.forward) || \r\n                   (node.parent && node.backward) || \r\n                   node.repeat || node.delay || \r\n                    node.frame || node.recursive\r\n                )\r\n            ) node.runSync = true;\r\n\r\n            if(node.animate && !node.isAnimating) {\r\n                node.runAnimation(node.animation,args,node,origin);\r\n            }\r\n\r\n            //can add an infinite loop coroutine, one per node, e.g. an internal subroutine\r\n            if(node.loop && typeof node.loop === 'number' && !node.isLooping) {\r\n                node.runLoop(node.looper,args,node,origin);\r\n            }\r\n            node.firstRun = false;\r\n        }\r\n    \r\n        //no async/flow logic so just run and return the operator result (which could still be a promise if the operator is async)\r\n        if(node.runSync){\r\n            let res = node.runOp(node, origin, ...args); //repeat/recurse before moving on to the parent/child\r\n            return res;\r\n        }\r\n\r\n        return new Promise(async (resolve) => {\r\n            if(node) {\r\n                let run = (node, tick=0, ...input) => {\r\n                    return new Promise (async (r) => {\r\n                        tick++;\r\n                        let res = await node.runOp(node, origin, ...input); //executes the operator on the node in the flow logic\r\n                        if(typeof node.repeat === 'number') {\r\n                            while(tick < node.repeat) {\r\n                                if(node.delay) {\r\n                                    setTimeout(async ()=>{\r\n                                        r(await run(node,tick, ...input));\r\n                                    },node.delay);\r\n                                    break;\r\n                                } else if (node.frame && typeof requestAnimationFrame !== 'undefined') {\r\n                                    requestAnimationFrame(async ()=>{\r\n                                        r(await run(node,tick, ...input));\r\n                                    });\r\n                                    break;\r\n                                }\r\n                                else res = await node.runOp(node, origin, ...input);\r\n                                tick++;\r\n                            }\r\n                            if(tick === node.repeat) {\r\n                                r(res);\r\n                                return;\r\n                            }\r\n                        } else if(typeof node.recursive === 'number') {\r\n                            \r\n                            while(tick < node.recursive) {\r\n                                if(node.delay) {\r\n                                    setTimeout(async ()=>{\r\n                                        r(await run(node,tick, ...res));\r\n                                    },node.delay);\r\n                                    break;\r\n                                } else if (node.frame && typeof requestAnimationFrame !== 'undefined') {\r\n                                    requestAnimationFrame(async ()=>{\r\n                                        r(await run(node,tick, ...res));\r\n                                    });\r\n                                    break;\r\n                                }\r\n                                else res = await node.runOp(node, origin, ...res);\r\n                                tick++;\r\n                            }\r\n                            if(tick === node.recursive) {\r\n                                r(res);\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            r(res);\r\n                            return;\r\n                        }\r\n                    });\r\n                }\r\n    \r\n    \r\n                let runnode = async () => {\r\n    \r\n                    let res = await run(node, undefined, ...args); //repeat/recurse before moving on to the parent/child\r\n                    \r\n                    //can add an animationFrame coroutine, one per node //because why not\r\n                    if(node.animate && !node.isAnimating) {\r\n                        node.runAnimation(node.animation,args,node,origin);\r\n                    }\r\n    \r\n                    //can add an infinite loop coroutine, one per node, e.g. an internal subroutine\r\n                    if(typeof node.loop === 'number' && !node.isLooping) {\r\n                        node.runLoop(node.looper,args,node,origin);\r\n                    }\r\n    \r\n                    if(node.backward && node.parent) {\r\n                        await node.parent._run(node.parent, this, res);\r\n                    }\r\n                    if(node.children && node.forward) {\r\n                        if(Array.isArray(node.children)) {\r\n                            for(let i = 0; i < node.children.length; i++) {\r\n                                await node.children[i]._run(node.children[i], this, res);\r\n                            }\r\n                        }\r\n                        else await node.children._run(node.children, this, res);\r\n                    }\r\n    \r\n                    return res;\r\n                }\r\n    \r\n                if(node.delay) {\r\n                    setTimeout(async ()=>{\r\n                        resolve(await runnode());\r\n                    },node.delay);\r\n                } else if (node.frame && typeof requestAnimationFrame !== 'undefined') {\r\n                    requestAnimationFrame(async ()=>{\r\n                        resolve(await runnode());\r\n                    });\r\n                } else {\r\n                    resolve(await runnode());\r\n                }\r\n                \r\n            }\r\n            else resolve(undefined);\r\n        });\r\n    }\r\n    \r\n    runAnimation = (\r\n        animation:OperatorType=this.animation, \r\n        args=[], \r\n        node:GraphNode&GraphNodeProperties|any=this, \r\n        origin:string|GraphNode|Graph\r\n    ) => {\r\n        //can add an animationFrame coroutine, one per node //because why not\r\n        this.animation = animation;\r\n        if(!animation) this.animation = this.operator;\r\n        if(node.animate && !node.isAnimating) {\r\n            node.isAnimating = true;\r\n            let anim = async () => {\r\n                //console.log('anim')\r\n                if(node.isAnimating) {\r\n                    let result = this.animation( \r\n                        node,\r\n                        origin,\r\n                        ...args\r\n                    );\r\n                    if(result instanceof Promise) {\r\n                        result = await result;\r\n                    }\r\n                    if(typeof result !== 'undefined') {\r\n                        if(this.tag) this.setState({[this.tag]:result}); //if the anim returns it can trigger state\r\n                        if(node.backward && node.parent) {\r\n                            await node.parent._run(node.parent, this, result);\r\n                        }\r\n                        if(node.children && node.forward) {\r\n                            if(Array.isArray(node.children)) {\r\n                                for(let i = 0; i < node.children.length; i++) {\r\n                                    await node.children[i]._run(node.children[i], this, result);\r\n                                }\r\n                            }\r\n                            else await node.children._run(node.children, this, result);\r\n                        }\r\n                    }\r\n                    requestAnimationFrame(anim);\r\n                }\r\n            }\r\n            requestAnimationFrame(anim);\r\n        }\r\n    }\r\n    \r\n    runLoop = (\r\n        loop:OperatorType=this.looper, \r\n        args=[], \r\n        node:GraphNode&GraphNodeProperties|any=this, \r\n        origin:string|GraphNode|Graph\r\n    ) => {\r\n        //can add an infinite loop coroutine, one per node, e.g. an internal subroutine\r\n        this.looper = loop;\r\n        if(!loop) this.looper = this.operator;\r\n        if(typeof node.loop === 'number' && !node.isLooping) {\r\n            node.isLooping = true;\r\n            let looping = async () => {\r\n                if(node.looping)  {\r\n                    let result = this.looper(\r\n                        node, \r\n                        origin, \r\n                        ...args\r\n                    );\r\n                    if(result instanceof Promise) {\r\n                        result = await result;\r\n                    }\r\n                    if(typeof result !== 'undefined') {\r\n                        if(this.tag) this.setState({[this.tag]:result}); //if the loop returns it can trigger state\r\n                        if(node.backward && node.parent) {\r\n                            await node.parent._run(node.parent, this,  result);\r\n                        }\r\n                        if(node.children && node.forward) {\r\n                            if(Array.isArray(node.children)) {\r\n                                for(let i = 0; i < node.children.length; i++) {\r\n                                    await node.children[i]._run(node.children[i], this, result);\r\n                                }\r\n                            }\r\n                            else await node.children._run(node.children, this, result);\r\n                        }\r\n                    }\r\n                    setTimeout(async ()=>{await looping();},node.loop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    //this is the i/o handler, or the 'main' function for this node to propagate results. The origin is the node the data was propagated from\r\n    setOperator = (operator:OperatorType) => {\r\n        this.operator = operator;\r\n    }\r\n    \r\n    // Set GraphNode parent\r\n    setParent = (parent:GraphNode) => { \r\n        this.parent = parent;\r\n        if(this.backward) this.runSync = false;\r\n    }\r\n    \r\n    // Set GraphNode children\r\n    setChildren = (children:GraphNode|GraphNode[]) => {\r\n        this.children = children;\r\n        if(this.forward) this.runSync = false;\r\n    }\r\n    \r\n    //converts all children nodes and tag references to GraphNodes also\r\n    add = (node:GraphNodeProperties|OperatorType|((...args)=>any|void)={}) => {\r\n        if(typeof node === 'function') node = { operator:node as any};\r\n        if(!(node instanceof GraphNode)) node = new GraphNode(node,this,this.graph); \r\n        this.nodes.set(node.tag,node);\r\n        if(this.graph) this.graph.nodes.set(node.tag,node);\r\n        return node;\r\n    }\r\n    \r\n    remove = (node:string|GraphNode) => {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node instanceof GraphNode) {\r\n            this.nodes.delete(node.tag);\r\n            if(this.graph) this.graph.nodes.delete(node.tag);\r\n            this.nodes.forEach((n:GraphNode) => {\r\n                if(n.nodes.get((node as GraphNode).tag)) n.nodes.delete((node as GraphNode).tag);\r\n            }); \r\n        }\r\n    }\r\n    \r\n    //append a node as a child to a parent node (this by default)\r\n    append = (node:string|GraphNode, parentNode=this) => {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node instanceof GraphNode)  {\r\n            parentNode.addChildren(node);\r\n            if(node.forward) node.runSync = false;\r\n        }\r\n    }      \r\n            \r\n    //subscribe an output with an arbitrary callback\r\n    subscribe = (callback:GraphNode|((res)=>void),tag:string=this.tag) => {\r\n        if(callback instanceof GraphNode) {\r\n            return this.subscribeNode(callback);\r\n        } else return this.state.subscribeTrigger(tag,callback);\r\n    }\r\n    \r\n    //unsub the callback\r\n    unsubscribe = (sub:number,tag=this.tag) => {\r\n        this.state.unsubscribeTrigger(tag,sub);\r\n    }\r\n\r\n    //append child\r\n    addChildren = (children:GraphNode|GraphNodeProperties|(GraphNode|GraphNodeProperties)[]) => {\r\n        if(!this.children) this.children = [];\r\n        if(!Array.isArray(this.children)) {\r\n            this.children = [children];\r\n            if(typeof children === 'object' && (children as any).tag) {\r\n                this.nodes.set((children as any).tag,children);\r\n                if(this.graph) this.graph.nodes.set((children as any).tag,children);\r\n            }\r\n        }\r\n        else if(Array.isArray(children)) {\r\n            this.children.push(...children);\r\n            children.forEach((c) => { \r\n                if(typeof c === 'object' && c.tag) {\r\n                    this.nodes.set(c.tag,c);\r\n                    if(this.graph) this.graph.nodes.set(c.tag,c);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.children.push(children);\r\n            if(typeof children === 'object' && children.tag) {\r\n                this.nodes.set(children.tag,children);\r\n                if(this.graph) this.graph.nodes.set(children.tag,children);\r\n            }\r\n        }\r\n        if(this.forward) this.runSync = false;\r\n    }\r\n\r\n    \r\n    //Call parent node operator directly (.run calls the flow logic)\r\n    callParent = (...args) => {\r\n        const origin = this // NOTE: This node must be the origin\r\n        if(typeof this.parent?.operator === 'function') return this.parent.runOp(this.parent, origin, ...args);\r\n    }\r\n    \r\n    //call children operators directly (.run calls the flow logic)\r\n    callChildren = (idx:number, ...args) => {\r\n        const origin = this // NOTE: This node must be the origin\r\n        let result;\r\n        if(Array.isArray(this.children)) {\r\n            if(idx) result = this.children[idx]?.runOp(this.children[idx], origin, ...args);\r\n            else {\r\n                result = [];\r\n                for(let i = 0; i < this.children.length; i++) {\r\n                    result.push(this.children[i]?.runOp(this.children[i], origin, ...args));\r\n                } \r\n            }\r\n        } else if(this.children) {\r\n            result = this.children.runOp(this.children, origin, ...args);\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    setProps = (props:GraphNodeProperties={}) => {\r\n        Object.assign(this,props);\r\n        if(\r\n            !( \r\n               (this.children && this.forward) || \r\n               (this.parent && this.backward) || \r\n               this.repeat || this.delay || \r\n               this.frame || this.recursive\r\n            )\r\n        ) this.runSync = true;\r\n    }\r\n\r\n    removeTree = (node:GraphNode|string) => { //stop and dereference nodes to garbage collect them\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node instanceof GraphNode) {\r\n            const recursivelyRemove = (node) => {\r\n                if(node.children) {\r\n                    if(Array.isArray(node.children)) {\r\n                        node.children.forEach((c)=>{\r\n                            if(c.stopNode) c.stopNode();\r\n                            if(c.tag) {\r\n                                if(this.nodes.get(c.tag)) this.nodes.delete(c.tag);\r\n                            }\r\n                            this.nodes.forEach((n) => {\r\n                                if(n.nodes.get(c.tag)) n.nodes.delete(c.tag);\r\n                            });\r\n                            recursivelyRemove(c);\r\n                        })\r\n                    }\r\n                    else if(typeof node.children === 'object') {\r\n                        if(node.stopNode) node.stopNode();\r\n                        if(node.tag) {\r\n                            if(this.nodes.get(node.tag)) this.nodes.delete(node.tag);\r\n                        }\r\n                        this.nodes.forEach((n) => {\r\n                            if(n.nodes.get(node.tag)) n.nodes.delete(node.tag);\r\n                        });\r\n                        recursivelyRemove(node);\r\n                    }\r\n                }\r\n            }\r\n            if(node.stopNode) node.stopNode();\r\n            if(node.tag) {\r\n                this.nodes.delete(node.tag);\r\n                this.nodes.forEach((n) => {\r\n                    if(n.nodes.get((node as GraphNode).tag)) n.nodes.delete((node as GraphNode).tag);\r\n                });\r\n                recursivelyRemove(node);\r\n                if(this.graph) this.graph.nodes.removeTree(node); //remove from parent graph too \r\n            }\r\n        }\r\n    }\r\n         \r\n    convertChildrenToNodes = (n:GraphNode) => {\r\n        if( n?.children instanceof GraphNode ) { \r\n            if(!this.graph?.nodes.get(n.tag)) this.graph.nodes.set(n.tag,n);\r\n            if(!this.nodes.get(n.tag)) this.nodes.set(n.tag,n); \r\n        }\r\n        else if (Array.isArray(n.children)) {\r\n            for(let i = 0; i < n.children.length; i++) {\r\n                if(n.children[i].name === 'Graph') { \r\n                    if(!this.graph?.nodes.get(n.children[i].tag)) this.graph.nodes.set(n.children[i].tag,n.children[i]);\r\n                    if(!this.nodes.get(n.children[i].tag)) this.nodes.set(n.children[i].tag,n.children[i]);\r\n                    continue; \r\n                }\r\n                else if(typeof n.children[i] === 'object') {\r\n                    n.children[i] = new GraphNode(n.children[i],n,this.graph);\r\n                    this.nodes.set(n.children[i].tag,n.children[i]);\r\n                    this.convertChildrenToNodes(n.children[i]);\r\n                } \r\n                else if (typeof n.children[i] === 'string') {\r\n                    if(this.graph) {\r\n                        n.children[i] = this.graph.get(n.children[i]); //try graph scope\r\n                        if(!this.nodes.get(n.children[i].tag)) this.nodes.set(n.children[i].tag,n.children[i]);\r\n                    }\r\n                    if(!n.children[i]) n.children[i] = this.nodes.get(n.children[i]); //try local scope\r\n                }\r\n                \r\n            }\r\n        }\r\n        else if(typeof n.children === 'object') {\r\n            n.children = new GraphNode(n.children,n,this.graph);\r\n            this.nodes.set(n.children.tag,n.children);\r\n            this.convertChildrenToNodes(n.children);\r\n        } \r\n        else if (typeof n.children === 'string') {\r\n            if(this.graph) {\r\n                n.children = this.graph.get(n.children); //try graph scope\r\n                if(!this.nodes.get(n.children.tag)) this.nodes.set(n.children.tag,n.children);\r\n            }\r\n            if(!n.children) n.children = this.nodes.get(n.children); //try local scope\r\n        }\r\n        return n.children;\r\n    }\r\n\r\n    get = (tag:string) => {\r\n        return this.nodes.get(tag);\r\n    }\r\n    \r\n    //stop any loops\r\n    stopLooping = (node:GraphNode=this) => {\r\n        node.isLooping = false;\r\n    }\r\n    \r\n    stopAnimating = (node:GraphNode=this) => {\r\n        node.isAnimating = false;\r\n    }\r\n    \r\n    stopNode = (node:GraphNode=this) => {\r\n        node.stopAnimating(node);\r\n        node.stopLooping(node);\r\n    }\r\n\r\n    \r\n    //subscribe a node (that isn't a forward-passed child of this node) to run after this node \r\n    subscribeNode = (node:GraphNode) => {\r\n        if(node.tag) this.nodes.set(node.tag,node); //register the node on this node\r\n        return this.state.subscribeTrigger(this.tag,(res)=>{node._run(node, this, res);})\r\n    }\r\n    \r\n    //recursively print a snapshot reconstructible json hierarchy of the node and the children. \r\n    // Start at the top/initially called nodes to print the whole hierarchy in one go\r\n    print = (node:string|GraphNode=this,printChildren=true,nodesPrinted=[]) => {\r\n    \r\n        let dummyNode = new GraphNode(); //test against this for adding props\r\n    \r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node instanceof GraphNode) {\r\n            \r\n            nodesPrinted.push(node.tag);\r\n        \r\n            let jsonToPrint:any = {\r\n                tag:node.tag,\r\n                operator:node.operator.toString()\r\n            };\r\n        \r\n            if(node.parent) jsonToPrint.parent = node.parent.tag;\r\n            //step through the children\r\n            if(node.children) {\r\n                if(Array.isArray(node.children)) {\r\n                    node.children = node.children.map((c) => {\r\n                        if(typeof c === 'string') return c;\r\n                        if(nodesPrinted.includes(c.tag)) return c.tag;   \r\n                        else if(!printChildren) {\r\n                            return c.tag;\r\n                        }\r\n                        else return c.print(c,printChildren,nodesPrinted);\r\n                    });\r\n                } else if (typeof node.children === 'object') { \r\n                    if(!printChildren) {\r\n                        jsonToPrint.children = [node.children.tag];\r\n                    }\r\n                    if(nodesPrinted.includes(node.children.tag))  jsonToPrint.children = [node.children.tag];\r\n                        else  jsonToPrint.children = [node.children.print(node.children,printChildren,nodesPrinted)];\r\n                } else if (typeof node.children === 'string') jsonToPrint.children = [node.children];\r\n                \r\n            }\r\n        \r\n            for(const prop in node) {\r\n                if(prop === 'parent' || prop === 'children') continue; //skip these as they are dealt with as special cases\r\n                if(typeof (dummyNode as any)[prop] === 'undefined') {\r\n                    if(typeof node[prop] === 'function') {\r\n                        jsonToPrint[prop] = node[prop].toString()\r\n                    } else if (typeof node[prop] === 'object') {\r\n                        jsonToPrint[prop] = (JSON as any).stringifyWithCircularRefs(node[prop]); //circular references won't work, nested nodes already printed elsewhere in the tree will be kept as their tags\r\n                    } \r\n                    else {\r\n                        jsonToPrint[prop] = node[prop];\r\n                    }\r\n                }\r\n            }\r\n        \r\n            return JSON.stringify(jsonToPrint);\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    //reconstruct a node hierarchy (incl. stringified functions) into a GraphNode set\r\n    reconstruct = (json:string|{[x:string]: any}) => {\r\n        let parsed = reconstructObject(json);\r\n        if(parsed) return this.add(parsed);\r\n    }\r\n\r\n    setState = this.state.setState; //little simpler\r\n}\r\n\r\n\r\n\r\n// Macro set for GraphNodes\r\nexport class Graph {\r\n    nNodes = 0\r\n    tag:string;\r\n    nodes = new Map();\r\n    state=state;\r\n\r\n    //can create preset node trees on the graph\r\n    tree:Tree = {}\r\n\r\n    constructor( tree:Tree, tag:string ) {\r\n        this.tag = tag ? tag : `graph${Math.floor(Math.random()*100000000000)}`;\r\n\r\n        if(tree || Object.keys(this.tree).length > 0) this.setTree(tree);\r\n    }\r\n\r\n    //converts all children nodes and tag references to GraphNodes also\r\n    add = (node:GraphNode|GraphNodeProperties|OperatorType|((...args)=>any|void) ={}) => {\r\n        let props = node;\r\n        if(!(node instanceof GraphNode)) node = new GraphNode(props,undefined,this); \r\n        this.tree[node.tag] = props; //set the head node prototype in the tree object\r\n        return node;\r\n    }\r\n\r\n    setTree = (tree:Tree = this.tree) => {\r\n        if(!tree) return;\r\n\r\n        for(const node in tree) { //add any nodes not added yet, assuming we aren't overwriting the same tags to the tree.\r\n            if(!this.nodes.get(node)) {\r\n                if(typeof tree[node] === 'function') {\r\n                    this.add({tag:node, operator:tree[node] as OperatorType|((...args)=>any|void)});\r\n                }\r\n                else if (typeof tree[node] === 'object') {\r\n                    if(!(tree[node] as any).tag) (tree[node] as any).tag = node;\r\n                    let newNode = this.add(tree[node]);\r\n                    if((tree[node] as GraphNodeProperties).aliases) {\r\n                        (tree[node] as GraphNodeProperties).aliases.forEach((a) => {\r\n                            this.nodes.set(a,newNode); \r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get = (tag:string) => {\r\n        return this.nodes.get(tag);\r\n    }\r\n\r\n    //Should create a sync version with no promises (will block but be faster)\r\n    run = (node:string|GraphNode,...args) => {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node instanceof GraphNode)\r\n            return node._run(node,this,...args)\r\n        else return undefined;\r\n    }\r\n\r\n    _run = (node:string|GraphNode,origin:string|GraphNode|Graph=this,...args) => {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node instanceof GraphNode)\r\n            return node._run(node,origin,...args)\r\n        else return undefined;\r\n    }\r\n\r\n    removeTree = (node:string|GraphNode) => {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if(node instanceof GraphNode) {\r\n            const recursivelyRemove = (node:GraphNode) => {\r\n                if(node.children) {\r\n                    if(Array.isArray(node.children)) {\r\n                        node.children.forEach((c)=>{\r\n                            if(c.stopNode) c.stopNode();\r\n                            if(c.tag) {\r\n                                if(this.nodes.get(c.tag)) this.nodes.delete(c.tag);\r\n                            }\r\n                            this.nodes.forEach((n) => {\r\n                                if(n.nodes.get(c.tag)) n.nodes.delete(c.tag);\r\n                            });\r\n                            recursivelyRemove(c);\r\n                        })\r\n                    }\r\n                    else if(typeof node.children === 'object') {\r\n                        if(node.stopNode) node.stopNode();\r\n                        if(node.tag) {\r\n                            if(this.nodes.get(node.tag)) this.nodes.delete(node.tag);\r\n                        }\r\n                        this.nodes.forEach((n) => {\r\n                            if(n.nodes.get(node.tag)) n.nodes.delete(node.tag);\r\n                        });\r\n                        recursivelyRemove(node);\r\n                    }\r\n                }\r\n            }\r\n            if((node as GraphNode).stopNode) (node as GraphNode).stopNode();\r\n            if((node as GraphNode).tag) {\r\n                this.nodes.delete((node as GraphNode).tag);\r\n                this.nodes.forEach((n) => {\r\n                    if(n.nodes.get((node as GraphNode).tag)) n.nodes.delete((node as GraphNode).tag);\r\n                });\r\n                recursivelyRemove(node as GraphNode);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove = (node:string|GraphNode) => {\r\n        if(typeof node === 'string') node = this.nodes.get(node);\r\n        if((node as GraphNode)?.tag) {\r\n            (node as GraphNode).stopNode();\r\n            if((node as GraphNode)?.tag) this.nodes.delete((node as GraphNode).tag);\r\n            if((node as GraphNode)?.tag) {\r\n                if(this.nodes.get((node as GraphNode).tag)) \r\n                {\r\n                    this.nodes.delete((node as GraphNode).tag);\r\n                    //if(this.graph) this.graph.nodes.delete(node.tag);\r\n                    this.nodes.forEach((n) => {\r\n                        if(n.nodes.get((node as GraphNode).tag)) n.nodes.delete((node as GraphNode).tag);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    append = (node:GraphNode, parentNode:GraphNode) => {\r\n        parentNode.addChildren(node);\r\n    }\r\n\r\n    callParent = async (node:GraphNode, origin:string|GraphNode|Graph=node, ...args ) => {\r\n        if(node?.parent) {\r\n            return await node.callParent(node,origin,...args);\r\n        }\r\n    }\r\n\r\n    callChildren = async (node:GraphNode, idx?:number, ...args) => {\r\n        if(node?.children) {\r\n            return await node.callChildren(idx,...args);\r\n        }\r\n    }\r\n\r\n    subscribe = (node:string|GraphNode,callback:(res:any)=>void) => {\r\n        if(!callback) return;\r\n        if(typeof node !== 'string') node = node.tag;\r\n        if(node instanceof GraphNode) {\r\n            return node.subscribe(callback);\r\n        }\r\n        else return this.state.subscribeTrigger(node,callback);\r\n    }\r\n\r\n    unsubscribe = (tag:string,sub:number) => {\r\n        this.state.unsubscribeTrigger(tag,sub);\r\n    }\r\n\r\n    //subscribe a node to this node that isn't a child of this node\r\n    subscribeNode = (inputNode:string|GraphNode, outputNode:GraphNode|string) => {\r\n        let tag;\r\n        if((inputNode as GraphNode)?.tag) tag = (inputNode as GraphNode).tag;\r\n        else if (typeof inputNode === 'string') tag = inputNode;\r\n        return this.state.subscribeTrigger(tag,(res)=>{this.run(outputNode,inputNode, ...res);}) // TODO: Check if correct node\r\n    }\r\n\r\n    print = (node:GraphNode|undefined=undefined,printChildren=true) => {\r\n        if(node instanceof GraphNode) return node.print(node,printChildren);\r\n        else {\r\n            let printed = `{`;\r\n            this.nodes.forEach((n) => { //print all nodes if none specified\r\n                printed+=`\\n\"${n.tag}:${n.print(n,printChildren)}\"`  \r\n            });\r\n            return printed;\r\n        }\r\n    }\r\n\r\n    //reconstruct a node hierarchy (incl. stringified functions) into a GraphNode set\r\n    reconstruct = (json:string|{[x:string]: any}) => {\r\n        let parsed = reconstructObject(json);\r\n        if(parsed) return this.add(parsed);\r\n    }\r\n\r\n    create = (operator:OperatorType,parentNode:GraphNode,props:GraphNodeProperties) => {\r\n        return createNode(operator,parentNode,props,this);\r\n    }\r\n\r\n    setState = this.state.setState;\r\n}\r\n\r\n\r\n//macro\r\nexport function reconstructNode(json:string|{[x:string]: any},parentNode,graph) {\r\n    let reconstructed = reconstructObject(json);\r\n    if(reconstructed) return new GraphNode(reconstructed,parentNode,graph);\r\n    else return undefined;\r\n}\r\n\r\n// exports.Graph = Graph;\r\n// exports.GraphNode = GraphNode;\r\n\r\n//parse stringified object with stringified functions\r\nexport function reconstructObject(json:string|{[x:string]: any}='{}') {\r\n    try{\r\n\r\n        // Allow raw object\r\n        let parsed = (typeof json === 'string') ? JSON.parse(json) : json\r\n\r\n        const parseObj = (obj) => {\r\n            for(const prop in obj) {\r\n                if(typeof obj[prop] === 'string') {\r\n                    let funcParsed = parseFunctionFromText(obj[prop]);\r\n                    if(typeof funcParsed === 'function') {\r\n                        obj[prop] = funcParsed;\r\n                    }\r\n                } else if (typeof obj[prop] === 'object') {\r\n                    parseObj(obj[prop]);\r\n                }\r\n            }\r\n            return obj;\r\n        }\r\n\r\n        return parseObj(parsed);\r\n    } catch(err) {console.error(err); return undefined;}\r\n\r\n}\r\n\r\nexport const stringifyWithCircularRefs = (function() {\r\n    const refs = new Map();\r\n    const parents = [];\r\n    const path = [\"this\"];\r\n\r\n    function clear() {\r\n    refs.clear();\r\n    parents.length = 0;\r\n    path.length = 1;\r\n    }\r\n\r\n    function updateParents(key, value) {\r\n        var idx = parents.length - 1;\r\n        var prev = parents[idx];\r\n        if(typeof prev === 'object') {\r\n            if (prev[key] === value || idx === 0) {\r\n                path.push(key);\r\n                parents.push(value.pushed);\r\n            } else {\r\n                while (idx-- >= 0) {\r\n                    prev = parents[idx];\r\n                    if(typeof prev === 'object') {\r\n                        if (prev[key] === value) {\r\n                            idx += 2;\r\n                            parents.length = idx;\r\n                            path.length = idx;\r\n                            --idx;\r\n                            parents[idx] = value;\r\n                            path[idx] = key;\r\n                            break;\r\n                        }\r\n                    }\r\n                    idx--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkCircular(key, value) {\r\n    if (value != null) {\r\n        if (typeof value === \"object\") {\r\n        if (key) { updateParents(key, value); }\r\n\r\n        let other = refs.get(value);\r\n        if (other) {\r\n            return '[Circular Reference]' + other;\r\n        } else {\r\n            refs.set(value, path.join('.'));\r\n        }\r\n        }\r\n    }\r\n    return value;\r\n    }\r\n\r\n    return function stringifyWithCircularRefs(obj, space?) {\r\n    try {\r\n        parents.push(obj);\r\n        return JSON.stringify(obj, checkCircular, space);\r\n    } finally {\r\n        clear();\r\n    }\r\n    }\r\n})();\r\n\r\nif((JSON as any).stringifyWithCircularRefs === undefined) {\r\n    //Workaround for objects containing DOM nodes, which can't be stringified with JSON. From: https://stackoverflow.com/questions/4816099/chrome-sendrequest-error-typeerror-converting-circular-structure-to-json\r\n    (JSON as any).stringifyWithCircularRefs = stringifyWithCircularRefs;\r\n}\r\n\r\nexport function createNode(operator:OperatorType,parentNode:GraphNode,props:GraphNodeProperties,graph:Graph) {\r\n    if(typeof props === 'object') {\r\n        (props.operator as any) = operator;\r\n        return new GraphNode(props,parentNode,graph);\r\n    }\r\n    return new GraphNode({operator:operator},parentNode,graph);\r\n}\r\n", "import { Graph, GraphNode, GraphNodeProperties, OperatorType, stringifyWithCircularRefs } from \"../GraphNode\";\r\n\r\n/**\r\n * \r\n * A service extends acyclic graph to enhance networking operations and aggregate for our microservices\r\n * \r\n */\r\n\r\nexport type RouteProp = { //these are just multiple methods you can call on a route/node tag kind of like http requests but really it applies to any function you want to add to a route object if you specify that method even beyond these http themed names :D\r\n    get?:{ \r\n        object:any,\r\n        transform:(...args:any)=>any\r\n    }|((...args:any)=>any|void),\r\n    post?:OperatorType|((...args)=>any|void), \r\n    put?:(...args:any)=>any|void,\r\n    head?:(...args:any)=>any|void,\r\n    delete?:(...args:any)=>any|void,\r\n    patch?:(...args:any)=>any|void,\r\n    options?:(...args:any)=>any|void,\r\n    connect?:(...args:any)=>any|void,\r\n    trace?:(...args:any)=>any|void,\r\n    aliases?:string[] \r\n} & GraphNodeProperties\r\n\r\n\r\nexport type Routes = { //same as the tree in the base acyclic graph but adds aliases and RouteProps handling\r\n    [key:string]:\r\n        GraphNode |\r\n        GraphNodeProperties |\r\n        OperatorType |\r\n        ((...args)=>any|void) |\r\n        { aliases?:string[] } & GraphNodeProperties |\r\n        RouteProp\r\n}\r\n\r\nexport type ServiceMessage = {\r\n    route:string,  //the function/node to execute\r\n    args?:any, //route args or data depending on what we're handling\r\n    method?:string, //can specify get, post, etc. on http requests or on multiplexed routes using the RouteProp format\r\n    node?:string|GraphNode, //alt tag for routes\r\n    origin?:string|GraphNode|Graph|Service\r\n}\r\n\r\n\r\nexport class Service extends Graph {\r\n\r\n    //routes denote paths and properties callable across interfaces and inherited by parent services (adding the service name in the \r\n    // front of the route like 'http/createServer'.\r\n    routes:Routes={}\r\n    firstLoad = true;\r\n    name:string=`service${Math.floor(Math.random()*100000000000000)}`;\r\n    protocol:'http'|'ws'|'sse'|'webrtc'|'osc'|'worker'|'unsafe'|'struct'|string;\r\n\r\n    constructor(routes?:Routes, name?:string) {\r\n        super(undefined,name);\r\n        if(name) this.name = name;\r\n        if(routes) this.load(routes); //now process the routes for the acyclic graph to load them as graph nodes :-D\r\n    }\r\n\r\n    \r\n    load = (routes?:Service|Routes|any) => {    \r\n        if(!routes && !this.firstLoad) return;\r\n        //console.log(this.routes);\r\n        let service;\r\n        if(!(routes instanceof Service) && (routes as any)?.name) { //class prototype\r\n            service = new routes();\r\n            service.load();\r\n            routes = service.routes;\r\n        } //we can instantiate a class and load the routes. Routes should run just fine referencing the classes' internal data structures without those being garbage collected.\r\n        else if (routes instanceof Service) { //class instance\r\n            service = routes;\r\n            routes = routes.routes; //or pull routes from an existing class\r\n        }\r\n        if(service instanceof Service) {     \r\n            //the routes provided from a service will add the route name in front of the route so like 'name/route' to minimize conflicts, \r\n            //incl making generic service routes accessible per service. The services are still independently usable while the loader \r\n            // service provides routes to the other services\r\n            routes = Object.assign({},routes); //copy props to a new object so we don't delete the original service routes\r\n            for(const prop in routes) { \r\n                let route = routes[prop];\r\n                delete routes[prop]; \r\n                routes[service.name+'/'+prop] = route;  //store the routes in the loaded service under aliases including the service name\r\n            }\r\n        }\r\n        \r\n        if(this.firstLoad) {\r\n            let rts = Object.assign({},this.defaultRoutes); //load all default routes\r\n            if(routes) {\r\n                Object.assign(rts,this.routes); //then load declared routesin this object\r\n                routes = Object.assign(rts,routes); //then load new routes in constructor\r\n            } else routes = Object.assign(rts,this.routes); //then load declared routesin this object\r\n            \r\n            //console.log(this.name,this.routes,routes);\r\n            this.firstLoad = false;\r\n        }\r\n\r\n        for(const route in routes) {\r\n            if(typeof routes[route] === 'object') {\r\n                let r = routes[route] as RouteProp;\r\n                for(const prop in r) {\r\n                    r[prop.toLowerCase()] = r[prop]; //ensure existence of lower case copies of route props for our method handler\r\n                }\r\n                if(r.get) { //maybe all of the http method mimics should get some shared extra specifications? \r\n                    if(typeof r.get == 'object') {\r\n                        \r\n                    }\r\n                }\r\n                if(r.post) {}\r\n                if(r.delete) {}\r\n                if(r.put) {}\r\n                if(r.head) {}\r\n                if(r.patch) {}\r\n                if(r.options) {}\r\n                if(r.connect) {}\r\n                if(r.trace) {}\r\n\r\n                if(r.post && !r.operator) {\r\n                    routes[route].operator = r.post;\r\n                } else if (!r.operator && typeof r.get == 'function') {\r\n                    routes[route].operator = r.get;\r\n                }\r\n                if(this.routes[route]) {\r\n                    if(typeof this.routes[route] === 'object') Object.assign(this.routes[route],routes[route]);\r\n                    else this.routes[route] = routes[route];\r\n                } else this.routes[route] = routes[route];\r\n            } else if(this.routes[route]) {\r\n                if(typeof this.routes[route] === 'object') Object.assign(this.routes[route],routes[route]);\r\n                else this.routes[route] = routes[route];\r\n            } else this.routes[route] = routes[route];\r\n        }\r\n\r\n        this.setTree(this.routes);\r\n\r\n        for(const prop in this.routes) { //now set the aliases on the routes, the aliases share the same node otherwise\r\n            if((this.routes[prop] as any)?.aliases) {\r\n                let aliases = (this.routes[prop] as any).aliases;\r\n                aliases.forEach((a:string) => {\r\n                    if(service) routes[service.name+'/'+a] = this.routes[prop]; //we're just gonna copy the routes to the aliases for simplicity \r\n                    else routes[a] = this.routes[prop];\r\n                });\r\n\r\n            }\r\n            \r\n        }\r\n\r\n        //console.log(this.name,this.routes);\r\n        return this.routes;\r\n    }\r\n\r\n    unload = (routes:Service|Routes|any=this.routes) => { //tries to delete the nodes along with the routes, incl stopping any looping nodes\r\n        if(!routes) return; \r\n        let service;\r\n        if(!(routes instanceof Service) && (routes as any)?.name === 'Service') {\r\n            service = new Service();\r\n            routes = service.routes;\r\n        } //we can instantiate a class and load the routes. Routes should run just fine referencing the classes' internal data structures without those being garbage collected.\r\n        else if (routes instanceof Service) {\r\n            routes = routes.routes; //or pull routes from an existing class\r\n        }\r\n        for(const r in routes) {\r\n            delete this.routes[r]; //this is its own object separate from the node tree map\r\n            if(this.nodes.get(r)) this.remove(r);\r\n        }\r\n\r\n        return this.routes;\r\n    }\r\n\r\n    handleMethod = (\r\n        route:string, \r\n        method:string, \r\n        args:any, \r\n        origin?:string|GraphNode|Graph|Service\r\n    ) => { //For handling RouteProp or other routes with multiple methods \r\n        let m = method.toLowerCase(); //lower case is enforced in the route keys\r\n        if(m === 'get' && typeof ((this.routes[route] as RouteProp)?.get as any)?.transform === 'function') { //make alt formats for specific methods and execute them a certain way\r\n            if(Array.isArray(args)) return ((this.routes[route] as RouteProp).get as any).transform(...args);\r\n            else return ((this.routes[route] as RouteProp).get as any).transform(args);\r\n        }\r\n        if(this.routes[route]?.[m]) {\r\n            if(typeof this.routes[route][m] !== 'function') {\r\n                return this.routes[route][m]; //could just be a stored local variable we are returning like a string or object\r\n            }// else if(origin) { return this.routes[route][m](origin,data); }//put origin in first position\r\n            else return this.routes[route][m](args); \r\n            \r\n        }//these could be any function or property call\r\n        else return this.handleServiceMessage({route,args,method,origin}) //process normally if the method doesn't return\r\n    }\r\n\r\n    handleServiceMessage(message:ServiceMessage) {\r\n        let call; if(message.route) call = message.route; else if (message.node) call = message.node;\r\n        if(call) {\r\n            if(message.origin) { //origin will be second argument in this case\r\n                if(Array.isArray(message.args)) return this._run(call,message.origin,...message.args);\r\n                else return this._run(call,message.origin,message.args);\r\n            } else {\r\n                if(Array.isArray(message.args)) return this.run(call,...message.args);\r\n                else return this.run(call,message.args);\r\n            }\r\n        } else return message;\r\n    }\r\n\r\n    handleGraphNodeCall(route:string|GraphNode, args:any, origin?:string|GraphNode|Graph) {\r\n        if(!route) return args;\r\n        if((args as ServiceMessage)?.args) {\r\n            this.handleServiceMessage(args);\r\n        }\r\n        else if(origin) {\r\n            if(Array.isArray(args)) return this._run(route, origin, ...args);\r\n            else return this._run(route, origin, args);\r\n        }\r\n        else if(Array.isArray(args)) return this.run(route,...args);\r\n        else return this.run(route, args);\r\n    }\r\n\r\n    //transmit http requests, socket messages, webrtc, osc, etc. with this customizable callback\r\n    transmit:(...args)=>any|void = (\r\n        ...args:[ServiceMessage|any,...any[]]|any[]\r\n    ) => {\r\n        if(typeof args[0] === 'object') {\r\n            if(typeof args[0]?.method === 'string') { //run a route method directly, results not linked to graph\r\n                return this.handleMethod(args[0].route, args[0].method, args[0].args);\r\n            } else if(typeof args[0]?.route === 'string') {\r\n                return this.handleServiceMessage(args[0]);\r\n            } else if ((typeof args[0]?.node === 'string' || args[0].node instanceof GraphNode)) {\r\n                return this.handleGraphNodeCall(args[0].node, args[0].args, args[0].origin);\r\n            } else return args; \r\n        } else return args;\r\n    } \r\n\r\n    //process http requests, socket messages, webrtc, osc, etc. with this customizable callback. This default still works in some scenarios\r\n    receive:(...args)=>any|void = (\r\n        ...args:[ServiceMessage|any,...any[]]|any[] //generalized args for customizing, it looks weird I know\r\n    ) => {\r\n        if(typeof args[0] === 'string') {\r\n            if(args[0].includes('{') || args[0].includes('[')) {    \r\n                if(args[0].includes('\\\\')) args[0] = args[0].replace(/\\\\/g,\"\");\r\n                if(args[0][0] === '\"') { args[0] = args[0].substring(1,args[0].length-1)};\r\n                //console.log(args[0])\r\n                args[0] = JSON.parse(args[0]); //parse stringified args\r\n            }\r\n        }\r\n\r\n        if(typeof args[0] === 'object') {\r\n            if(typeof args[0].method === 'string') { //run a route method directly, results not linked to graph\r\n                return this.handleMethod(args[0].route, args[0].method, args[0].args);\r\n            } else if(typeof args[0].route === 'string') {\r\n                return this.handleServiceMessage(args[0]);\r\n            } else if ((typeof args[0].node === 'string' || args[0].node instanceof GraphNode)) {\r\n                return this.handleGraphNodeCall(args[0].node, args[0].args, args[0].origin);\r\n            } else return args; \r\n        } else return args;\r\n    }//these are fairly identical on the base template plus json parsing on the receive end\r\n\r\n    //we may want to auto pipe outputs from a node through our frontend<-->backend service protocol\r\n    pipe = (\r\n        source:GraphNode|string, \r\n        destination:string, \r\n        origin?:string, \r\n        method?:string, \r\n        callback?:(res:any)=>any|void\r\n    ) => {\r\n        if(source instanceof GraphNode) {\r\n            if(callback) return source.subscribe((res)=>{\r\n                let mod = callback(res); //either a modifier or a void function to do a thing before transmitting the data\r\n                if(typeof mod !== 'undefined') this.transmit({route:destination, args:mod, origin, method});\r\n                else this.transmit({route:destination, args:res, origin, method});\r\n            })\r\n            else return this.subscribe(source,(res)=>{ this.transmit({route:destination, args:res, origin, method}); });\r\n        }\r\n        else if(typeof source === 'string') return this.subscribe(source,(res)=>{ \r\n            this.transmit({route:destination, args:res, origin, method}); \r\n        });\r\n    }\r\n\r\n    terminate = (...args:any) => {\r\n       this.nodes.forEach((n) => {\r\n           n.stopNode(); //stops any loops\r\n       });\r\n    }\r\n    \r\n    isTypedArray(x:any) { //https://stackoverflow.com/a/40319428\r\n        return (ArrayBuffer.isView(x) && Object.prototype.toString.call(x) !== \"[object DataView]\");\r\n    }\r\n\r\n    defaultRoutes:Routes = { //declared at the end so everything on this class is defined to pass through as node props\r\n        '/':{ //if no start page provided to HTTPbackend this will print instead on GET\r\n            get:()=>{ //if only a get or post are defined the will become the operator for making graph calls\r\n                return this.print();\r\n            },\r\n            aliases:['']\r\n        } as RouteProp,\r\n        ping:()=>{ //define functions, graph props, etc. All methods defined in a route object are callable\r\n            console.log('ping');//this.transmit('pong');\r\n            return 'pong';\r\n        },\r\n        echo:(...args:any)=>{ //this transmits input arguments, so to echo on a specific service do e.g. 'wss/echo'\r\n            this.transmit(...args);\r\n            return args;\r\n        },\r\n        log:{ //console.log/info\r\n            post:(...args:any)=>{\r\n                console.log(\"Log: \",...args);\r\n            },\r\n            aliases:['info']\r\n        } as RouteProp,\r\n        error:(message:string)=>{ //console.error\r\n            let er = new Error(message);\r\n            console.error(message);\r\n            return er;\r\n        },\r\n        state:(key?:string) => { //get state values\r\n            if(key) {\r\n                return this.state.data[key];\r\n            }\r\n            else return this.state.data;\r\n        },\r\n        printState:(key?:string) => {\r\n            if(key) {\r\n                return stringifyWithCircularRefs(this.state.data[key]);\r\n            } else return stringifyWithCircularRefs(this.state.data);\r\n        },\r\n        //bunch of methods generically available on routes for each service e.g. 'http/run' :-O\r\n        transmit:this.transmit,\r\n        receive:this.receive,\r\n        load:this.load,\r\n        unload:this.unload,\r\n        pipe:this.pipe,\r\n        terminate:this.terminate,\r\n        run:this.run,\r\n        _run:this._run,\r\n        subscribe:this.subscribe,\r\n        unsubscribe:this.unsubscribe,\r\n        get:this.get,\r\n        add:this.add,\r\n        remove:this.remove,\r\n        setTree:this.setTree,\r\n        print:this.print,\r\n        reconstruct:this.reconstruct,\r\n        handleMethod:this.handleMethod,\r\n        handleServiceMessage:this.handleServiceMessage,\r\n        handleGraphNodeCall:this.handleGraphNodeCall\r\n    }\r\n\r\n}", "import { GraphNode } from \"../GraphNode\";\r\nimport { Routes, Service, ServiceMessage } from '../services/Service';\r\n\r\n//should match existing service names, services have matching frontend and backend names as well\r\nexport type Protocol = 'http'|'wss'|'sse'|'webrtc'|'osc'|'worker'|'ble'|'unsafe'|'struct'|'fs'|'lsl'|'hdf5'|'unity'; //??? could make alternates too like express etc. services, everything is pluggable. \r\n\r\n\r\n//handle subscriptions\r\n//match i/o protocols to correct services\r\n\r\nexport class Router { //instead of extending acyclicgraph or service again we are going to keep this its own thing\r\n\r\n    id = `router${Math.floor(Math.random()*1000000000000000)}`\r\n\r\n    service = new Service(); //global service\r\n    run = this.service.run;\r\n    _run = this.service._run;\r\n    add = this.service.add;\r\n    remove = this.service.remove;\r\n    subscribe = this.service.subscribe;\r\n    unsubscribe = this.service.unsubscribe;\r\n    get = this.service.get;\r\n    reconstruct = this.service.reconstruct;\r\n    setState = this.service.setState;\r\n\r\n    state = this.service.state;\r\n\r\n    services:{[key:string]:Service} = {};\r\n\r\n    constructor(services:(Service|Routes)[]|{[key:string]:Service|Routes}|any[]) { //preferably pass services but you can pass route objects in too to just add more base routes\r\n        if(Array.isArray(services)){\r\n            services.forEach(s => this.load(s));\r\n        }\r\n        else if (typeof services === 'object') {\r\n            Object.keys(services).forEach(s => this.load(services[s]));\r\n        }\r\n        \r\n        //reference some methods on the service if undefined\r\n        if(!this.run) {\r\n            this.run = this.service.run;\r\n            this._run = this.service._run;\r\n            this.add = this.service.add;\r\n            this.remove = this.service.remove;\r\n            this.subscribe = this.service.subscribe;\r\n            this.unsubscribe = this.service.unsubscribe;\r\n            this.get = this.service.get;\r\n            this.reconstruct = this.service.reconstruct;\r\n            this.setState = this.service.setState;\r\n            this.state = this.service.state; //share the shared state with router too why not\r\n        }\r\n    }\r\n\r\n    load = (service:Service|Routes|any) => { //load a service class instance or service prototoype class\r\n        if(!(service instanceof Service) && (service as any)?.name)    \r\n        {   \r\n            service = new service(undefined, service.name); //we can instantiate a class)\r\n            service.load();\r\n        }\r\n        else if(!service) return;\r\n        if(service instanceof Service) {\r\n            this.services[service.name] = service;\r\n        }\r\n        this.service.load(service);\r\n        \r\n        return this.services[service.name];\r\n    }\r\n\r\n    //pipe state updates from a source route/node through an available protocol to a destination route/node\r\n    pipe = (\r\n        source:string|GraphNode, \r\n        destination:string, \r\n        transmitter?:Protocol|string, \r\n        origin?:string, \r\n        method?:string, \r\n        callback?:(res:any)=>any|void\r\n    ) => {\r\n        if(!transmitter && source && destination) {\r\n            \r\n            if(callback) return  this.subscribe(source,(res:any) => { \r\n                let mod = callback(res);\r\n                if(mod) res = mod;\r\n                this.run(destination, res); \r\n            }); //local pipe\r\n            return this.subscribe(source,(res:any) => { this.run(destination, res); }); //local pipe\r\n        }\r\n        const radio = this.services[transmitter];\r\n        if(radio) {\r\n            if(callback) {\r\n                return this.subscribe(source,(res) => {\r\n                    let mod = callback(res);\r\n                    if(mod) res = mod;\r\n                    radio.transmit({route:destination,args:res,origin,method});\r\n                });\r\n\r\n            }\r\n            else return this.subscribe(source,(res) => {\r\n                radio.transmit({route:destination,args:res,origin,method});\r\n            });\r\n        }\r\n    }\r\n    \r\n    receive = (message:any|ServiceMessage, service:Protocol|string, ...args) => {\r\n        if(service) for(const key in this.services) {\r\n            if(key === service || this.services[key].name === service) {\r\n                return this.services[key].receive(message, ...args);\r\n            }\r\n        }\r\n        return this.service.receive(message, ...args); //graph call\r\n    }\r\n\r\n    transmit = (message:any|ServiceMessage, service:Protocol|string, ...args) => {\r\n        if(service) for(const key in this.services) {\r\n            if(key === service || this.services[key].name === service) {\r\n                return this.services[key].transmit(message, ...args);\r\n            }\r\n        }\r\n        return this.service.transmit(message, ...args); //graph call\r\n    }\r\n}", "import { GraphNode, GraphNodeProperties } from \"../../../GraphNode\";\r\nimport { Protocol, Router } from \"../Router\";\r\nimport { Routes, Service } from \"../../services/Service\";\r\n\r\nexport type UserProps = {\r\n    _id:string,                      //unique ID\r\n    sockets:{[key:string]:any},      //websockets info, browser and node use different libraries but have same calls\r\n    wss:{[key:string]:any},          //websocket server backend info \r\n    eventsources:{[key:string]:any}, //sse client or server info\r\n    servers:{[key:string]:any},      //http servers, e.g. dedicated webpage contexts? *shrug*\r\n    webrtc:{[key:string]:any},       //webrtc rooms and/or server info\r\n    sessions:{[key:string]:any},     //game sessions\r\n    latency?:number,                 //should calculate other metrics like latency\r\n    [key:string]:any //other user properties e.g. personally identifying information\r\n} & GraphNodeProperties\r\n\r\n//this is to aggregate server activity based on specific Ids provided as origin tags in calls\r\nexport class UserRouter extends Router {\r\n\r\n    users:{\r\n        [key:string]:GraphNode\r\n    } = {}\r\n\r\n    constructor(services:(Service|Routes)[]|{[key:string]:Service|Routes}|any[]) {\r\n        super(services);\r\n    }\r\n\r\n    //just a macro for service._run with clear usage for user Id as origin, you'll need to wire up how responses are handled at the destination based on user id\r\n    runAs = (\r\n        node:string|GraphNode, \r\n        userId:string, \r\n        ...args:any[]\r\n    ) => {\r\n        return this._run(node,userId,...args);\r\n    }\r\n\r\n    pipeAs = ( //just macro of service.pipe with clear usage for user Id as origin, you'll need to wire up how responses are handled at the destination based on user id\r\n        source:string | GraphNode, \r\n        destination:string, \r\n        transmitter:Protocol|string, \r\n        userId:string,\r\n        method:string, \r\n        callback:(res:any)=>any|void\r\n    ) => {\r\n        return this.pipe(source, destination, transmitter, userId, method, callback);\r\n    }\r\n\r\n    //pass user info and any service connections we want specific to this users. Pass properties of services \r\n    //   to create fresh connections e.g. with custom callbacks\r\n    addUser(user:UserProps) { \r\n        if(!user?._id) user._id = `user${Math.floor(Math.random()*1000000000000000)}`;\r\n            \r\n        //pass any connection props and replace them with signaling objects e.g. to set event listeners on messages for this user for these sockets, sse's, rtcs, etc.\r\n        if(user.sockets) {\r\n            for(const address in user.sockets) {\r\n                if(!user.sockets[address].socket) {\r\n                    user.sockets[address] = this.run('wss/openWS',user.sockets[address]);\r\n                }\r\n            }\r\n        }\r\n        if(user.wss) {\r\n            for(const address in user.wss) {\r\n                if(!user.wss[address].wss) {\r\n                    user.wss[address] = this.run('wss/openWSS',user.wss[address]);\r\n                }\r\n            }\r\n        }\r\n        if(user.eventsources) {\r\n            for(const path in user.eventsources) {\r\n                if(!user.eventsources[path].source && !user.eventsources[path].sessions) {\r\n                    user.eventsources[path] = this.run('wss/openSSE',user.eventsources[path]);\r\n                }\r\n            }\r\n        }\r\n        if(user.servers) {\r\n            for(const address in user.servers) {\r\n                if(!user.servers[address].server) {\r\n                    user.servers[address] = this.run('http/setupServer',user.servers[address]);\r\n                }\r\n            }\r\n        }\r\n        //if(users.webrtc)\r\n        //if(users.sessions)\r\n            \r\n        if(!(user instanceof GraphNode)) this.users[user._id] = new GraphNode(user, undefined, this.service);\r\n\r\n        return this.users[user._id];\r\n    }\r\n\r\n    //need to close all user connections\r\n    removeUser = (user:UserProps & GraphNode) => {\r\n        if(user.sockets) {\r\n            for(const address in user.sockets) {\r\n                if(!user.sockets[address].socket) {\r\n                    this.run('wss/terminate',address);\r\n                }\r\n            }\r\n        }\r\n        if(user.wss) {\r\n            for(const address in user.wss) {\r\n                if(!user.wss[address].wss) {\r\n                    this.run('wss/terminate',address);\r\n                }\r\n            }\r\n        }\r\n        if(user.eventsources) {\r\n            for(const path in user.eventsources) {\r\n                if(!user.eventsources[path].source && !user.eventsources[path].sessions) {\r\n                    this.run('wss/terminate',path);\r\n                }\r\n            }\r\n        }\r\n        if(user.servers) {\r\n            for(const address in user.servers) {\r\n                if(!user.servers[address].server) {\r\n                    this.run('http/terminate',address);\r\n                }\r\n            }\r\n        }\r\n\r\n        delete this.users[user._id];\r\n    }\r\n\r\n}", "import { RouteProp, Routes, Service, ServiceMessage } from \"../Service\";\r\nimport * as http from 'http'\r\nimport * as https from 'https'\r\nimport * as fs from 'fs'\r\nimport * as path from 'path'\r\n\r\n\r\nexport type ServerProps = {\r\n    host:string,\r\n    port:number,\r\n    certpath?:string, \r\n    keypath?:string,\r\n    passphrase?:string,\r\n    startpage?: string,\r\n    errpage?:string,\r\n    pageOptions?:{\r\n        [key:'all'|string]:{\r\n            inject:{[key:string]:{}|null}|string[]|string| ((...args:any)=>any) //append html      \r\n        }\r\n    },\r\n    protocol?:'http'|'https',\r\n    keepState?:boolean, //setState whenever a route is run? State will be available at the address (same key of the object storing it here)\r\n    [key:string]:any\r\n}\r\n\r\nexport type ServerInfo = {\r\n    server:https.Server|http.Server,\r\n    address:string\r\n} & ServerProps\r\n\r\nexport type ReqOptions = {\r\n    protocol:'http'|'https'|string\r\n    host:string,\r\n    port:number,\r\n    method:string,\r\n    path?:string,\r\n    headers?:{\r\n        [key:string]:string | number | string[],\r\n        'Content-Type'?:string, //e.g...\r\n        'Content-Length'?:number\r\n    }\r\n}\r\n\r\n//http/s server \r\nexport class HTTPbackend extends Service {\r\n\r\n    name='http';\r\n\r\n    server:any\r\n\r\n    debug:boolean=false\r\n\r\n    servers:{\r\n        [key:string]:ServerInfo\r\n    }={}\r\n\r\n    mimeTypes:{[key:string]:string} = { \r\n        '.html': 'text/html', '.htm': 'text/html', '.js': 'text/javascript', '.css': 'text/css', '.json': 'application/json', '.txt':'text/plain',\r\n        '.png': 'image/png', '.jpg': 'image/jpg', '.jpeg': 'image/jpg','.gif': 'image/gif', '.svg': 'image/svg+xml', '.xhtml':'application/xhtml+xml', '.bmp':'image/bmp',\r\n        '.wav': 'audio/wav', '.mp3':'audio/mpeg', '.mp4': 'video/mp4', '.xml':'application/xml', '.webm':'video/webm', '.webp':'image/webp', '.weba':'audio/webm',\r\n        '.woff': 'font/woff', 'woff2':'font/woff2', '.ttf': 'application/font-ttf', '.eot': 'application/vnd.ms-fontobject', '.otf': 'application/font-otf',\r\n        '.wasm': 'application/wasm', '.zip':'application/zip','.xlsx':'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', '.tif':'image/tiff',\r\n        '.sh':'application/x-sh', '.csh':'application/x-csh', '.rar':'application/vnd.rar','.ppt':'application/vnd.ms-powerpoint', '.pptx':'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n        '.odt':'application/vnd.oasis.opendocument.text','.ods':'application/vnd.oasis.opendocument.spreadsheet','.odp':'application/vnd.oasis.opendocument.presentation',\r\n        '.mpeg':'video/mpeg','.mjs':'text/javascript','.cjs':'text/javascript','.jsonld':'application/ld+json', '.jar':'application/java-archive', '.ico':'image/vnd.microsoft.icon',\r\n        '.gz':'application/gzip', 'epub':'application/epub+zip', '.doc':'application/msword', '.docx':'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n        '.csv':'text/csv', '.avi':'video/x-msvideo', '.aac':'audio/aac', '.mpkg':'application/vnd.apple.installer+xml','.oga':'audio/ogg','.ogv':'video/ogg','ogx':'application/ogg',\r\n        '.php':'application/x-httpd-php', '.rtf':'application/rtf', '.swf':'application/x-shockwave-flash', '.7z':'application/x-7z-compressed', '.3gp':'video/3gpp'\r\n    };\r\n\r\n    constructor(routes?:Routes, name?:string, settings?:{ host?:string, port?:number, protocol?:'http'|'https', certpath?:string, keypath?:string }) {\r\n        super(routes, name);\r\n\r\n        if(settings) {\r\n            if(settings.protocol === 'https') {\r\n                this.setupHTTPSserver( settings as any )\r\n            } else this.setupHTTPserver( settings as any);\r\n        }\r\n    \r\n    }\r\n\r\n    //on server started\r\n    onStarted = (protocol:'http'|'https'|string,host:string,port:number) => {\r\n        console.log(`\uD83D\uDC31 Node server running at \r\n            ${protocol}://${host}:${port}/`\r\n        );\r\n    }\r\n\r\n    setupServer = (\r\n        options:ServerProps={\r\n            protocol:'http',\r\n            host:'localhost',\r\n            port:8080,\r\n            startpage:'index.html'\r\n        },\r\n        requestListener?:http.RequestListener,\r\n        onStarted?:()=>void\r\n    )=>{\r\n        if(options.protocol === 'https') {\r\n            return this.setupHTTPSserver(options as any,requestListener, onStarted);\r\n        }\r\n        else\r\n            return this.setupHTTPserver(options, requestListener, onStarted);\r\n    }\r\n    \r\n    //insecure server\r\n    setupHTTPserver = (\r\n        options:ServerProps={\r\n            host:'localhost' as string,\r\n            port:8080 as number,\r\n            startpage:'index.html',\r\n            errpage:undefined\r\n        },\r\n        requestListener?:http.RequestListener,\r\n        onStarted:()=>void = ()=>{this.onStarted('http',options.host,options.port)}\r\n    ) => {\r\n\r\n        const host = options.host;\r\n        const port = options.port;\r\n        options.protocol = 'http';\r\n\r\n        if(!host || !port) return;\r\n\r\n        const address = `${host}:${port}`;\r\n\r\n        if(this.servers[address]) this.terminate(this.servers[address]);\r\n\r\n        if(!('keepState' in options)) options.keepState = true; //default true\r\n\r\n        const served = {\r\n            server:undefined,\r\n            address,\r\n            ...options\r\n        }\r\n\r\n        if(!requestListener) requestListener =  (request:http.IncomingMessage,response:http.ServerResponse) => { \r\n            this.receive({route:request.url.slice(1), args:{request, response}, method:request.method, served}); \r\n        } //default requestListener\r\n\r\n        //var http = require('http');\r\n        const server = http.createServer(\r\n            requestListener\r\n        );\r\n\r\n        served.server = server;\r\n\r\n        // server.on('upgrade', (request, socket, head) => {\r\n        //     this.onUpgrade(request, socket, head);\r\n        // });\r\n\r\n        this.servers[address] = served;\r\n\r\n        //SITE AVAILABLE ON PORT:\r\n        return new Promise((resolve,reject) => {\r\n            server.on('error',(err)=>{\r\n                console.error('Server error:', err.toString());\r\n                reject(err);\r\n            });\r\n            server.listen( \r\n                port,host,\r\n                ()=>{onStarted(); resolve(served);}\r\n            );\r\n        });\r\n    }\r\n\r\n    //secure server\r\n    setupHTTPSserver = (\r\n        options:ServerProps = {\r\n            host:'localhost' as string,\r\n            port:8080 as number,\r\n            startpage:'index.html',\r\n            certpath:'cert.pem' as string, \r\n            keypath:'key.pem' as string,\r\n            passphrase:'encryption' as string,\r\n            errpage:undefined as undefined|string\r\n        },\r\n        requestListener?:http.RequestListener,\r\n        onStarted:()=>void = ()=>{this.onStarted('https',options.host,options.port)}\r\n    ) => {\r\n\r\n        const host = options.host;\r\n        const port = options.port;\r\n        options.protocol = 'https';\r\n\r\n        if(!host || !port || !options.certpath || !options.keypath) return;\r\n    \r\n        if(this.servers[`${host}:${port}`]) this.terminate(this.servers[`${host}:${port}`])\r\n\r\n        var opts = {\r\n            key: fs.readFileSync(options.keypath),\r\n            cert: fs.readFileSync(options.certpath),\r\n            passphrase:options.passphrase\r\n        };\r\n\r\n        if(!('keepState' in options)) options.keepState = true; //default true\r\n\r\n        const served = {\r\n            server:undefined,\r\n            address:`${host}:${port}`,\r\n            ...options\r\n        }\r\n\r\n        //default requestListener\r\n        if(!requestListener) requestListener = (request:http.IncomingMessage,response:http.ServerResponse) => { \r\n            this.receive({\r\n                route:request.url.slice(1), //gets rid of the '/' for the node tree to interpret... \r\n                args:{request, response}, \r\n                method:request.method, \r\n                served\r\n            }); \r\n        } //default requestListener\r\n\r\n        //var http = require('http');\r\n        const server = https.createServer(\r\n            opts,\r\n            requestListener \r\n        );\r\n\r\n        served.server = server;\r\n        \r\n        // server.on('upgrade', (request, socket, head) => {\r\n        //     this.onUpgrade(request, socket, head);\r\n        // });\r\n\r\n        this.servers[`${host}:${port}`] = served;\r\n\r\n        //SITE AVAILABLE ON PORT:\r\n        return new Promise((resolve,reject) => {\r\n            server.on('error',(err)=>{\r\n                console.error('Server error:', err.toString());\r\n                reject(err);\r\n            })\r\n            server.listen( \r\n                port,host,\r\n                ()=>{onStarted(); resolve(served); }\r\n            );\r\n        });\r\n    }\r\n\r\n    transmit = ( //generalized http request. The default will try to post back to the first server in the list\r\n        message:any | ServiceMessage, \r\n        options:{\r\n            protocol:'http'|'https'|string\r\n            host:string,\r\n            port:number,\r\n            method:string,\r\n            path?:string,\r\n            headers?:{\r\n                [key:string]:string | number | string[],\r\n                'Content-Type'?:string,\r\n                'Content-Length'?:number\r\n            }\r\n        },\r\n        ondata?:(chunk:any)=>void,\r\n        onend?:()=>void\r\n\r\n    ) => {\r\n        let input = message;\r\n        if(typeof input === 'object') input = JSON.stringify(input);\r\n        if(!options) { //fill a generic post request for the first server if none provided\r\n            let server = this.servers[Object.keys(this.servers)[0]];\r\n            options = {\r\n                protocol:server.protocol,\r\n                host:server.host,\r\n                port:server.port,\r\n                method:'POST',\r\n                path:message.route,\r\n                headers:{\r\n                    'Content-Type':'application/json',\r\n                    'Content-Length':input.length\r\n                }\r\n            };\r\n        } //get first server and use its settings for a generic post request\r\n        else if (!options.headers) {\r\n            options.headers = {\r\n                'Content-Type':'application/json',\r\n                'Content-Length':input.length\r\n            }\r\n        }\r\n\r\n        return this.request(options,input,ondata,onend);\r\n    }\r\n\r\n    withResult = (\r\n        response:http.ServerResponse,\r\n        result:any,\r\n        message:{\r\n            route:string, \r\n            args:{request:http.IncomingMessage,response:http.ServerResponse},  //data will be an object containing request, response\r\n            method?:string,\r\n            origin?:string,\r\n            served?:ServerInfo //server deets\r\n        }\r\n    ) => {\r\n        if(result && !response.writableEnded && !response.destroyed) {\r\n        \r\n            if(typeof result === 'string') {\r\n                if(result.includes('<') && result.includes('>') && (result.indexOf('<') < result.indexOf('>'))) //probably an html template\r\n                    {\r\n                        if(message?.served?.pageOptions?.all || message?.served?.pageOptions[message.route]) {\r\n                            result = this.injectPageCode(result,message.route,message.served) as any;\r\n                        }\r\n                        response.writeHead(200,{'Content-Type':'text/html'});\r\n                        response.end(result,'utf-8');\r\n                        return;\r\n                    }\r\n            }\r\n            \r\n            let mimeType = 'text/plain';\r\n\r\n            if(typeof result === 'object') {\r\n                result = JSON.stringify(result);\r\n                mimeType = 'application/json';\r\n            }\r\n\r\n            response.writeHead(200,{'Content-Type':mimeType});\r\n            response.end(result,'utf-8');\r\n        }\r\n    }\r\n\r\n    injectPageCode = (\r\n        templateString:string, \r\n        url:string,             \r\n        served:ServerInfo \r\n    ) => { \r\n        \r\n        if (served?.pageOptions[url]?.inject) { //inject per url\r\n            if(typeof served.pageOptions[url].inject === 'object') \r\n                templateString = this.buildPage(served.pageOptions[url].inject, templateString);\r\n            else if (typeof served.pageOptions[url].inject === 'function') \r\n                templateString += (served.pageOptions[url].inject as any)();\r\n            else if (typeof served.pageOptions[url].inject === 'string' || typeof served.pageOptions[url].inject === 'number') \r\n                templateString += served.pageOptions[url].inject;\r\n        }\r\n        if(served?.pageOptions.all?.inject) { //any per server\r\n            if(typeof served.pageOptions.all.inject === 'object') \r\n                templateString = this.buildPage(served.pageOptions.all.inject, templateString);\r\n            else if (typeof served.pageOptions.all.inject === 'function') \r\n                templateString += served.pageOptions.all.inject();\r\n            else if (typeof served.pageOptions.all.inject === 'string' || typeof served.pageOptions.all.inject === 'number') \r\n                templateString += served.pageOptions.all.inject;\r\n        }  \r\n        return templateString;\r\n    }\r\n\r\n    receive = ( //our fancy request response handler\r\n        message:{\r\n            route:string, \r\n            args:{request:http.IncomingMessage,response:http.ServerResponse},  //data will be an object containing request, response\r\n            method?:string,\r\n            origin?:string,\r\n            served?:ServerInfo //server deets\r\n        }\r\n    ) => {\r\n        const request = message.args.request; \r\n        const response = message.args.response; \r\n        const method = message.method; \r\n        const served = message.served;\r\n        //const origin = message.origin;\r\n\r\n        if(this.debug) console.log(request.method, request.url);\r\n        //console.log(request); //debug\r\n\r\n        let result = new Promise((resolve,reject) => {\r\n\r\n            response.on('error', (err) => {\r\n                if(!response.writableEnded || !response.destroyed ) {\r\n                    response.statusCode = 400;\r\n                    response.end(undefined,undefined,()=>{                \r\n                        reject(err);\r\n                    });\r\n                }\r\n            });\r\n\r\n            let getFailed = () => {\r\n                if(response.writableEnded || response.destroyed) reject(requestURL); \r\n                if(requestURL == './' || requestURL == served?.startpage) {\r\n                    let template = `<!DOCTYPE html><html><head></head><body style='background-color:#101010 color:white;'><h1>Brains@Play Server</h1></body></html>`; //start page dummy\r\n                    if(served.pageOptions?.all || served.pageOptions?.error) {\r\n                        template = this.injectPageCode(template,message.route,served) as any;\r\n                    }\r\n                    response.writeHead(200, { 'Content-Type': 'text/html' });\r\n                    response.end(template,'utf-8',() => {\r\n                        resolve(template);\r\n                    }); //write some boilerplate server page, we should make this an interactive debug page\r\n                    if(served.keepState) this.setState({[served.address]:template});\r\n                    //return;\r\n                }\r\n                else if(this.debug) console.log(`File ${requestURL} does not exist on path!`);\r\n                response.writeHead(500); //set response headers\r\n                response.end(undefined,undefined,()=>{\r\n                    reject(requestURL);\r\n                });\r\n               \r\n                //return;\r\n            }\r\n\r\n            if(method === 'GET' || method === 'get') {\r\n                //process the request, in this case simply reading a file based on the request url    \r\n                var requestURL = '.' + request.url;\r\n    \r\n                if (requestURL == './' && served?.startpage) { //root should point to start page\r\n                    requestURL = served.startpage; //point to the start page\r\n                }\r\n                \r\n                //console.log(path.join(process.cwd(),requestURL),fs.existsSync(path.join(process.cwd(),requestURL)));\r\n                if(fs.existsSync(path.join(process.cwd(),requestURL))) {\r\n                    if(response.writableEnded || response.destroyed) reject(requestURL);\r\n                    //read the file on the server\r\n                    fs.readFile(path.join(process.cwd(),requestURL), (error, content) => {\r\n                        if (error) {\r\n                            if(error.code == 'ENOENT') { //page not found: 404\r\n                                if(served?.errpage) {\r\n                                    fs.readFile(served.errpage, (er, content) => {\r\n                                        response.writeHead(404, { 'Content-Type': 'text/html' }); //set response headers\r\n    \r\n                                        \r\n                                        //add hot reload if specified\r\n                                        // if(process.env.HOTRELOAD && requestURL.endsWith('.html') && cfg.hotreload) {\r\n                                        //     content = addHotReloadClient(content,`${cfg.socket_protocol}://${cfg.host}:${cfg.port}/hotreload`);\r\n                                        // }\r\n\r\n                                        if(served.pageOptions?.all || served.pageOptions?.error) {\r\n                                            content = this.injectPageCode(content.toString(),message.route,served) as any;\r\n                                        }\r\n    \r\n                                        response.end(content, 'utf-8'); //set response content\r\n                                        reject(content);\r\n                                        //console.log(content); //debug\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    response.writeHead(404, { 'Content-Type': 'text/html' });\r\n                                    let content = `<!DOCTYPE html><html><head></head><body style='background-color:#101010 color:white;'><h1>Error: ${error.code}</h1></body></html>`\r\n                                    if(served.pageOptions?.all || served.pageOptions[message.route]) {\r\n                                        content = this.injectPageCode(content.toString(),message.route,served) as any;\r\n                                    }\r\n                                    response.end(content,'utf-8', () => {\r\n                                        reject(error.code);\r\n                                    });\r\n                                    //return;\r\n                                }\r\n                            }\r\n                            else { //other error\r\n                                response.writeHead(500); //set response headers\r\n                                response.end('Something went wrong: '+error.code+' ..\\n','utf-8', () => {\r\n                                    reject(error.code);\r\n                                }); //set response content\r\n                                //return;\r\n                            }\r\n                        }\r\n                        else { //file read successfully, serve the content back\r\n    \r\n                            //set content type based on file path extension for the browser to read it properly\r\n                            var extname = String(path.extname(requestURL)).toLowerCase();\r\n    \r\n                            var contentType = this.mimeTypes[extname] || 'application/octet-stream';\r\n\r\n                            if(contentType === 'text/html' && (served.pageOptions?.all || served.pageOptions[message.route])) {\r\n                                content = this.injectPageCode(content.toString(),message.route,served) as any;\r\n                            }\r\n\r\n                            response.writeHead(200, { 'Content-Type': contentType }); //set response headers\r\n                            response.end(content, 'utf-8', () => {\r\n                                //console.log(response,content,contentType);\r\n                                resolve(content);\r\n                            }); //set response content\r\n                            \r\n                            //console.log(content); //debug\r\n                            //return;\r\n                        }\r\n                    });\r\n                } else if (message.route) {\r\n                    let route = this.routes[message.route];\r\n                    if(!route) {\r\n                        route = this.routes[request.url];\r\n                    }\r\n                    if(route) {\r\n                        let res:any;\r\n                        if(message.method) {\r\n                            res = this.handleMethod(message.route, message.method, message.args, message.origin); //these methods are being passed request/response in the data here, post methods will parse the command objects instead while this can be used to get html templates or play with req/res custom callbakcs\r\n                        }\r\n                        else res = this.handleServiceMessage(message);\r\n    \r\n                        if(res instanceof Promise) res.then((r) => {\r\n                            if(served.keepState) this.setState({[served.address]:res});\r\n                            this.withResult(response,r,message);\r\n                            resolve(res);\r\n                            \r\n                            //return;\r\n                        })\r\n                        else if(res) {\r\n                            if(served.keepState) this.setState({[served.address]:res});\r\n                            this.withResult(response,res,message);\r\n                            resolve(res);\r\n                           // return;\r\n                        } //else we can move on to check the get post\r\n                    } \r\n                    else getFailed();\r\n                } else getFailed();\r\n            } else {\r\n                //get post/put/etc body if any\r\n                let body:any = [];\r\n                request.on('data',(chunk)=>{ //https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/\r\n                    body.push(chunk);\r\n                }).on('end',() => {\r\n                    body = Buffer.concat(body).toString(); //now it's a string\r\n                            \r\n                    if(typeof body === 'string') {\r\n                        if(body.includes('{') || body.includes('[')) body = JSON.parse(body); //parse stringified args, this is safer in a step\r\n                    }\r\n                    \r\n                    let route,method,args,origin;\r\n                    if(body?.route){ //if arguments were posted \r\n                        route = this.routes[body.route];\r\n                        method = body.method;\r\n                        args = body.args;\r\n                        origin = body.origin;\r\n                        if(!route) {\r\n                            if(typeof body.route === 'string') if(body.route.includes('/') && body.route.length > 1) body.route = body.route.split('/').pop();\r\n                            route = this.routes[body.route];\r\n                        }\r\n                    }\r\n                    if(!route) { //body post did not provide argument so use the request route\r\n                        if (message?.route) {\r\n                            let route = this.routes[message.route];\r\n                            method = message.method;\r\n                            args = message.args;\r\n                            origin = message.origin;\r\n                            if(!route) {\r\n                                if(typeof message.route === 'string') if(message.route.includes('/') && message.route.length > 1) message.route = message.route.split('/').pop();\r\n                                route = this.routes[message.route];\r\n                            }\r\n                        }\r\n                    }\r\n                    let res:any = body;\r\n                    if(route) {\r\n                        if(body.method) {\r\n                            res = this.handleMethod(route, method, args, origin);\r\n                        }\r\n                        else res = this.handleServiceMessage({route, args:args, method:method, origin:origin});\r\n                        \r\n                        if(res instanceof Promise) res.then((r) => {\r\n                            this.withResult(response,r,message);\r\n                            if(served.keepState) this.setState({[served.address]:res});\r\n                            resolve(res);\r\n                        })\r\n                        else {\r\n                            this.withResult(response,res,message);\r\n                            if(served.keepState) this.setState({[served.address]:res});\r\n                            resolve(res);\r\n                        }\r\n                    }\r\n                    else if(!response.writableEnded || !response.destroyed) {\r\n                        response.statusCode = 200;\r\n                        response.end(undefined,undefined, () => {\r\n                            resolve(res);\r\n                        }); //posts etc. shouldn't return anything but a 200 usually\r\n                    } else resolve(res); //get requests resolve first and return otherwise this will resolve \r\n                });\r\n\r\n            }\r\n\r\n    \r\n        }).catch((er)=>{ console.error(\"Request Error:\", er); });\r\n\r\n        return result;\r\n    }\r\n\r\n    request = ( \r\n        options:ReqOptions,\r\n        send?:any,\r\n        ondata?:(chunk:any)=>void,\r\n        onend?:()=>void\r\n    ) => {\r\n\r\n        let client = http;\r\n        \r\n        if ((options.protocol as string)?.includes('https')) {\r\n            client = https as any;\r\n        }\r\n    \r\n        delete options.protocol;\r\n\r\n        const req = client.request(options,(res)=>{\r\n            if(ondata) res.on('data',ondata)\r\n            if(onend) res.on('end',onend);\r\n        });\r\n\r\n        if(options.headers) {\r\n            for(const head in options.headers) {\r\n                req.setHeader(head,options.headers[head])\r\n            }\r\n        }\r\n\r\n        if(send) req.write(send);\r\n        req.end();\r\n\r\n        return req;\r\n    }\r\n\r\n    post = (\r\n        url:string|URL,\r\n        data:any,\r\n        headers?:{\r\n            'Content-Type'?:string,\r\n            'Content-Length'?:number,\r\n            [key:string]:string | number | string[]\r\n        }\r\n    ) => {\r\n\r\n        let urlstring = url;\r\n        if(urlstring instanceof URL) urlstring = url.toString();\r\n        let protocol = urlstring.startsWith('https') ? 'https' : 'http';\r\n        let host, port,path;\r\n        let split = urlstring.split('/');\r\n        split.forEach((s) => {\r\n            if(s.includes(':')) {\r\n                let ss = s.split(':');\r\n                host = ss[0]; port = ss[1];\r\n            }\r\n        });\r\n\r\n        if(split.length > 3) {\r\n            path = split.slice(3).join('/');\r\n        }\r\n\r\n        let req = this.request(\r\n            {\r\n                protocol,\r\n                host,\r\n                port,\r\n                path,\r\n                method:'POST',\r\n                headers\r\n            },\r\n            data\r\n        );\r\n\r\n        return req;\r\n    }\r\n\r\n    get = (url:string|URL|http.RequestOptions) => {\r\n        return new Promise<Buffer>((resolve, reject) => {\r\n        \r\n            let client = http;\r\n        \r\n            let urlstring = url;\r\n            if(url instanceof URL) urlstring = url.toString();\r\n            \r\n            if ((urlstring as string).includes('https')) {\r\n                client = https as any;\r\n            }\r\n        \r\n            client.get(url, (resp) => {\r\n            let chunks = [];\r\n        \r\n            // A chunk of data has been recieved.\r\n            resp.on('data', (chunk) => {\r\n                chunks.push(chunk);\r\n            });\r\n        \r\n            // The whole response has been received. Print out the result.\r\n            resp.on('end', () => {\r\n                resolve(Buffer.concat(chunks));\r\n            });\r\n        \r\n            }).on(\"error\", (err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    terminate = (served:string|{server:http.Server|https.Server}) => {\r\n        if(typeof served === 'string') served = this.servers[served];\r\n\r\n        if(typeof served === 'object') {\r\n            served.server.close();\r\n        }\r\n    }\r\n\r\n    getRequestBody(req:http.IncomingMessage) {\r\n        let chunks = [];\r\n        return new Promise<Buffer>((resolve,reject) => {\r\n            req.on('data',(chunk) => {\r\n                chunks.push(chunk);\r\n            }).on('end',() => {\r\n                resolve(Buffer.concat(chunks));\r\n            }).on('error',(er)=>{\r\n                reject(er);\r\n            })\r\n        });\r\n    }\r\n\r\n    //??? just need a way to pass a fake request/response in\r\n    // spoofRequest = (url:string, body:any, type:string='json', server:http.Server|https.Server) => {\r\n    //     return this.receive({\r\n    //         route:url,\r\n    //         args:{request:{\r\n    //             url,\r\n    //         } as http.IncomingMessage, response:{} as http.ServerResponse},\r\n    //         method:'GET'\r\n    //     })\r\n    // }\r\n\r\n    addPage = (path:string, template:string) => { //add an html page template\r\n        if(typeof template === 'string') {\r\n            if(!template.includes('<html')) template = '<!DOCTYPE html><html>'+template+'</html>'; //add a root\r\n        }\r\n        if(typeof this.routes[path] === 'object') (this.routes[path] as any).get = template;\r\n        else this.load({\r\n                [path]: {\r\n                    get:template\r\n                }\r\n            });\r\n    }\r\n\r\n    addHTML = (path:string, template:string) => { //add an html component template e.g. route: component/button then set up logic to chain\r\n        if(typeof template === 'string') {\r\n            if(!template.includes('<') || (!template.includes('>'))) template = '<div>'+template+'</div>';\r\n        }\r\n        if(typeof this.routes[path] === 'object') (this.routes[path] as any).get = template;\r\n        else this.load({\r\n                [path]: {\r\n                    get:template\r\n                }\r\n            });\r\n    }\r\n\r\n    buildPage = (pageStructure:{[key:string]:{}|null|any} | string[] | string | ((...args:any)=>any), baseTemplate:string) => { //construct a page from available components, child component templates will be inserted before the last '<' symbol or at end of the previous string depending\r\n        let result = ``; if(baseTemplate) result += baseTemplate;\r\n\r\n        let appendTemplate = (obj:{[key:string]:{}|null|any}|string[],r:string|any, res:string) => {\r\n            //console.log(obj,r,res)\r\n            if(typeof obj[r] === 'object') {\r\n                for(const key in obj) {\r\n                    appendTemplate(obj,key,res); //recursive append\r\n                }\r\n            } else if((this.routes[r] as RouteProp)?.get) {\r\n                let toAdd = (this.routes[r] as RouteProp).get;\r\n                if(typeof toAdd === 'function') toAdd = toAdd(obj[r]);\r\n                if(typeof toAdd === 'string')  {\r\n                    let lastDiv = res.lastIndexOf('<');\r\n                    if(lastDiv > 0) {\r\n                        let end = res.substring(lastDiv)\r\n                        res = res.substring(0,lastDiv) + toAdd + end;\r\n                    } res += toAdd; \r\n                }\r\n                \r\n            } else if (typeof this.routes[r] === 'function') {\r\n                let routeresult = (this.routes[r] as Function)(obj[r]); //template function, pass props\r\n                if(typeof routeresult === 'string') {   \r\n                    let lastDiv = res.lastIndexOf('<');\r\n                    if(lastDiv > 0) {\r\n                        let end = res.substring(lastDiv)\r\n                        res = res.substring(0,lastDiv) + routeresult + end;\r\n                    } \r\n                    else res += routeresult;\r\n                    //console.log(lastDiv, res, routeresult)\r\n                }\r\n                //console.log(routeresult)\r\n            } else if (typeof this.routes[r] === 'string') res += this.routes[r];\r\n            return res;\r\n        }\r\n\r\n        if(Array.isArray(pageStructure)) {  \r\n            pageStructure.forEach((r)=>{\r\n                result = appendTemplate(pageStructure,r,result);\r\n            })\r\n        } else if (typeof pageStructure === 'object') {\r\n            for(const r in pageStructure) {\r\n                result = appendTemplate(pageStructure,r,result);\r\n            }\r\n        } else if (typeof pageStructure === 'string') result += pageStructure;\r\n        else if (typeof pageStructure === 'function') result += pageStructure();\r\n        //console.log(result,pageStructure,this.routes)\r\n        return result;\r\n    }\r\n\r\n    routes:Routes={\r\n        setupServer:this.setupServer,\r\n        terminate:(path:string|number)=>{\r\n            for(const address in this.servers) {\r\n                if(address.includes(`${path}`)) {\r\n                    this.terminate(this.servers[address]);\r\n                    delete this.servers[address];\r\n                }\r\n            }\r\n        },\r\n        GET:this.get, //generic get from url\r\n        POST:this.post, //generic post to url\r\n        addPage:this.addPage,\r\n        addHTML:this.addHTML,\r\n        buildPage:this.buildPage,\r\n        getRequestBody:this.getRequestBody,\r\n\r\n        // provides injectable browser websocket-based hot reload template, \r\n        //  you still need to enable a websocket server separately\r\n        hotreload:(socketURL:string|URL=`http://localhost:8080/wss`) => { \r\n            \r\n            if(socketURL instanceof URL) socketURL = socketURL.toString();\r\n\r\n            const HotReloadClient = (url=`http://localhost:8080/wss`) => {\r\n                //hot reload code injected from backend\r\n                //const socketUrl = `ws://${cfg.host}:${cfg.hotreload}`;\r\n                let socket = new WebSocket(url);\r\n                socket.addEventListener('close',()=>{\r\n                  // Then the server has been turned off,\r\n                  // either due to file-change-triggered reboot,\r\n                  // or to truly being turned off.\r\n              \r\n                  // Attempt to re-establish a connection until it works,\r\n                  // failing after a few seconds (at that point things are likely\r\n                  // turned off/permanantly broken instead of rebooting)\r\n                  const interAttemptTimeoutMilliseconds = 100;\r\n                  const maxDisconnectedTimeMilliseconds = 3000;\r\n                  const maxAttempts = Math.round(maxDisconnectedTimeMilliseconds/interAttemptTimeoutMilliseconds);\r\n                  let attempts = 0;\r\n                  const reloadIfCanConnect = ()=>{\r\n                    attempts ++ ;\r\n                    if(attempts > maxAttempts){\r\n                      console.error(\"Could not reconnect to dev server.\");\r\n                      return;\r\n                    }\r\n                    socket = new WebSocket(url);\r\n                    socket.onerror = (er) => {\r\n                      console.error(`Hot reload port disconnected, will reload on reconnected. Attempt ${attempts} of ${maxAttempts}`);\r\n                    }\r\n                    socket.addEventListener('error',()=>{\r\n                      setTimeout(reloadIfCanConnect,interAttemptTimeoutMilliseconds);\r\n                    });\r\n                    socket.addEventListener('open',()=>{\r\n                      location.reload();\r\n                    });\r\n                  };\r\n                  reloadIfCanConnect();\r\n                });\r\n            }\r\n            \r\n            return `\r\n                <script>\r\n                    console.log('Hot Reload port available at ${socketURL}');  \r\n                    (`+HotReloadClient.toString()+`)('${socketURL}') \r\n                </script>\r\n            `\r\n        },\r\n        pwa:(serviceWorkerPath:string|URL, manifestPath?:string|URL) => {} //pwa template injector\r\n    }\r\n\r\n}", "import { Routes, Service, ServiceMessage } from \"../Service\";\r\nimport {createSession, createChannel} from 'better-sse'; //third party lib. SSEs really just \r\nimport http from 'http'\r\nimport https from 'https'\r\n\r\nexport type SSEProps = {\r\n    server:http.Server|https.Server,\r\n    path:string,\r\n    channels?:string[],\r\n    onconnection?:(session:any,sseinfo:any,req:http.IncomingMessage,res:http.ServerResponse)=>void,\r\n    onclose?:(sse:any)=>void,\r\n    onsessionclose:(session:any,sseinfo:any)=>void,\r\n    [key:string]:any\r\n}\r\n\r\nexport type SSESessionInfo = {\r\n    sessions:{\r\n        [key:string]:any\r\n    }\r\n} & SSEProps\r\n\r\nexport class SSEbackend extends Service {\r\n\r\n    name='sse'\r\n    \r\n    eventsources:{\r\n        [key:string]:SSESessionInfo\r\n    }={}\r\n\r\n    constructor(routes?:Routes, name?:string) {\r\n        super(routes, name);\r\n    }\r\n\r\n    setupSSE = (options:SSEProps) => {\r\n\r\n        const server = options.server; \r\n        let path = options.path;\r\n        \r\n        if(this.eventsources[path]) {\r\n            return false;\r\n        }\r\n\r\n        const channel = createChannel();\r\n        \r\n        let sse = {\r\n            channel,\r\n            sessions:{},\r\n            ...options\r\n        }\r\n        \r\n        this.eventsources[path] = sse;\r\n\r\n        let onRequest = (req:http.IncomingMessage,res:http.ServerResponse) => {\r\n            if(req.method === 'GET' && req.url.includes(path)) {\r\n                console.log('SSE Request', path);\r\n                createSession(req,res).then((session) => {\r\n\r\n                    channel.register(session);\r\n                    sse.sessions[`sse${Math.floor(Math.random()*1000000000000000)}`] = session;\r\n\r\n                    if(sse.onconnection) {sse.onconnection(session,sse,req,res);}\r\n                \r\n                });\r\n            }\r\n        }\r\n\r\n        let requestListeners = server.listeners('request');\r\n        server.removeAllListeners('request');\r\n\r\n        const otherListeners = (req:http.IncomingMessage,res:http.ServerResponse) => {\r\n            requestListeners.forEach((l)=> {\r\n                l(req,res);\r\n            });\r\n        }\r\n        \r\n        const sseListener =  (req:http.IncomingMessage,res:http.ServerResponse) => { \r\n            if(req.url.indexOf(path) > -1) { //redirect requests to this listener if getting this path\r\n                if(!this.eventsources[path]) { //removes this listener if not found and returns to the original listener array\r\n                    server.removeListener('request',sseListener);\r\n                    server.addListener('request',otherListeners);\r\n                }\r\n                onRequest(req,res);\r\n            }\r\n            else otherListeners(req,res);\r\n        }\r\n\r\n        server.addListener('request',sseListener);\r\n\r\n        server.addListener('close',()=>{\r\n            if(sse.onclose) sse.onclose(sse);\r\n        });\r\n\r\n        return sse;\r\n\r\n    }\r\n    \r\n    transmit = (\r\n        data:string | ServiceMessage, \r\n        path:string, \r\n        channel:string\r\n    ) => {\r\n        if(typeof data === 'object') {\r\n            if(data.route) {\r\n                if(!path) {\r\n                    let keys = Object.keys(this.eventsources)\r\n                    if(keys.length > 0) \r\n                        {\r\n                            let evs = this.eventsources[keys[0]];\r\n                            if(evs.channels.includes(data.route)) {\r\n                                path = evs.path;\r\n                                channel = data.route;\r\n                            }\r\n                            else if (evs.channels.includes((data as any).origin)) {\r\n                                path = evs.path;\r\n                                channel = data.origin as string;\r\n                            }\r\n                        }\r\n                    if(!path && data.route) \r\n                        if(this.eventsources[data.route]) \r\n                            path = data.route;\r\n                    if(!path && typeof data.origin === 'string') \r\n                        if(this.eventsources[data.origin]) \r\n                            path = data.origin;\r\n                }\r\n                \r\n            }\r\n            //if(!channel && data.route) channel = path; //there could be a channel for each route \r\n            data = JSON.stringify(data);\r\n        }\r\n\r\n        if(!path) path = Object.keys(this.eventsources)[0]; //transmit on default channel\r\n\r\n        if(path && channel) {\r\n            this.eventsources[path].channel.broadcast(data, channel); //specific events broadcasted to all sessions on the event source\r\n        } else if(path) {\r\n            let sessions = this.eventsources[path].sessions;\r\n            for(const s in sessions) {\r\n                if(sessions[s].isConnected) sessions[s].push(data);//on 'message' event\r\n                else {\r\n                    if(this.eventsources[path].onsessionclose) this.eventsources[path].onsessionclose(sessions[s], this.eventsources[path])\r\n                    delete sessions[s]; //removed dead sessions\r\n                }\r\n            }\r\n        } \r\n    }\r\n\r\n    //need to make a backend sse listener too\r\n\r\n    terminate = (path:string|SSEProps) => {\r\n        if(typeof path === 'object') delete this.eventsources[path.path];\r\n        else if(typeof path === 'string') delete this.eventsources[path];\r\n    }\r\n\r\n    routes:Routes = {\r\n        setupSSE:this.setupSSE,\r\n        terminate:this.terminate\r\n    }\r\n\r\n}", "import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n", "import { Routes, Service, ServiceMessage } from \"../Service\";\r\nimport WebSocket, { WebSocketServer } from 'ws'; //third party lib. //createWebSocketStream <-- use this for cross-node instance communication\r\nimport http from 'http'\r\nimport https from 'https'\r\n//import { GraphNode } from \"../GraphNode\";\r\n\r\nexport type SocketServerProps = {\r\n    server:http.Server|https.Server,\r\n    host:'localhost'|'127.0.0.1'|string,\r\n    port:7000|number,\r\n    path:'wss'|'hotreload'|'python'|string,\r\n    onmessage?:(data:any, ws:WebSocket, serverinfo:SocketServerInfo)=>void,\r\n    onclose?:(wss:WebSocketServer, serverinfo:SocketServerInfo)=>void,\r\n    onconnection?:(ws:WebSocket,request:http.IncomingMessage, serverinfo:SocketServerInfo)=>void,\r\n    onconnectionclosed?:(code:number,reason:Buffer,ws:WebSocket, serverinfo:SocketServerInfo)=>void,\r\n    onerror?:(err:Error, wss:WebSocketServer, serverinfo:SocketServerInfo)=>void,\r\n    keepState?:boolean,\r\n    [key:string]:any\r\n}\r\n\r\nexport type SocketServerInfo = {\r\n    wss:WebSocketServer,\r\n    clients:{[key:string]:WebSocket},\r\n    address:string\r\n} & SocketServerProps;\r\n\r\nexport type SocketProps = {\r\n    host:string,\r\n    port:number,\r\n    path?:string,\r\n    serverOptions?:WebSocket.ServerOptions\r\n    onmessage?:(data:string | ArrayBufferLike | Blob | ArrayBufferView | Buffer[], ws:WebSocket,wsinfo:SocketProps)=>void,  //will use this.receive as default\r\n    onopen?:(ws:WebSocket,wsinfo:SocketProps)=>void,\r\n    onclose?:(code:any,reason:any,ws:WebSocket,wsinfo:SocketProps)=>void,\r\n    onerror?:(er:Error, ws:WebSocket,wsinfo:SocketProps)=>void,\r\n    protocol?:'ws'|'wss',\r\n    keepState?:boolean\r\n}\r\n\r\nexport type SocketInfo = {\r\n    socket:WebSocket,\r\n    address?:string\r\n} & SocketProps;\r\n\r\n//server side (node) websockets\r\nexport class WSSbackend extends Service {\r\n\r\n    name='wss'\r\n\r\n    debug:boolean=false;\r\n    \r\n    //servers\r\n    servers:{\r\n        [key:string]:SocketServerInfo\r\n    }={};\r\n\r\n    //clients\r\n    sockets:{\r\n        [key:string]:SocketInfo\r\n    }={};\r\n\r\n    constructor(routes?:Routes, name?:string) {\r\n        super(routes, name);\r\n    }\r\n\r\n    setupWSS = (\r\n        options:SocketServerProps,\r\n    ) => {\r\n\r\n        const host = options.host;\r\n        const port = options.port;\r\n        let path = options.path;\r\n        const server = options.server;\r\n        delete options.server\r\n        if(!('keepState' in options)) options.keepState = true;\r\n\r\n        let opts = {\r\n            host,\r\n            port\r\n        };\r\n        if(typeof options.serverOptions) Object.assign(opts,options.serverOptions)\r\n\r\n        const wss = new WebSocketServer(opts);\r\n\r\n        let address = `${host}:${port}/`;\r\n        if(path) {\r\n            if(path.startsWith('/')) path = path.substring(1);\r\n            address += path;\r\n        }\r\n\r\n        this.servers[address] = {\r\n            wss,\r\n            clients:{},\r\n            address,\r\n            ...options\r\n        };\r\n\r\n\r\n        wss.on('connection',(ws,request) => {\r\n            if(this.debug) console.log(`New socket connection on ${address}`);\r\n            if(options.onconnection) options.onconnection(ws,request,this.servers[address]);//can overwrite the default onmesssage response \r\n            \r\n            if(!options.onmessage) options.onmessage = (data) => {  //default onmessage\r\n                const result = this.receive(data, wss, this.servers[address]); \r\n                if(options.keepState) this.setState({[address]:result}); \r\n            }\r\n\r\n            if(options.onmessage) ws.on('message',(data)=>{options.onmessage(data,ws,this.servers[address])}) //default onmessage response\r\n            if(options.onconnectionclosed) ws.on('close',(code,reason)=>{\r\n                if(options.onconnectionclosed) options.onconnectionclosed(code,reason,ws, this.servers[address]);\r\n            });\r\n\r\n            let clientId = `socket${Math.floor(Math.random()*1000000000000)}`;\r\n\r\n            this.servers[address].clients[clientId] = ws;\r\n        });\r\n\r\n        wss.on('error',(err) => {\r\n            if(this.debug) console.log(\"Socket Error:\",err);\r\n            if(options.onerror) options.onerror(err, wss, this.servers[address]);   \r\n            else console.error(err);\r\n        })\r\n\r\n        let onUpgrade = (request:http.IncomingMessage,socket:any,head:Buffer) => { //https://github.com/websockets/ws\r\n            \r\n            if(this.debug) console.log(\"Upgrade request at: \", request.url);\r\n            let addr = request.headers.host.split(':')[0];\r\n            addr += ':'+port;\r\n            addr += request.url.split('?')[0];\r\n\r\n            if(addr === address && this.servers[addr]) {\r\n                this.servers[addr].wss.handleUpgrade(request,socket,head,(ws) => {\r\n                    this.servers[addr].wss.emit('connection',ws,request);\r\n                });\r\n            }\r\n        }\r\n\r\n        server.addListener('upgrade',onUpgrade);\r\n\r\n        wss.on('close',()=> {\r\n            server.removeListener('upgrade',onUpgrade);\r\n            if(options.onclose) options.onclose(wss, this.servers[address]);\r\n            else console.log(`wss closed: ${address}`);\r\n        })\r\n\r\n        return this.servers[address];\r\n    }\r\n\r\n    openWS = (\r\n        options:SocketProps,\r\n    ) => {\r\n        let protocol = options.protocol;\r\n        if(!protocol) protocol = 'wss';\r\n        let address = `${protocol}://${options.host}`;\r\n        if(options.port) address+= ':'+options.port;\r\n        if(!options.path || options.path?.startsWith('/')) address += '/';\r\n        if(options.path) address += options.path;\r\n\r\n        const socket = new WebSocket(address);\r\n\r\n        if(!('keepState' in options)) options.keepState = true;\r\n\r\n        if(options.onmessage) socket.on('message',(data)=>{\r\n            options.onmessage(data,socket,this.sockets[address]);}); \r\n        else socket.on('message',(data)=>{ \r\n            const result = this.receive(data,socket,this.sockets[address]); \r\n            if(options.keepState) this.setState({[address]:result}); \r\n        }); //add default callback if none specified\r\n        if(options.onopen) socket.on('open',()=>{options.onopen(socket,this.sockets[address]);});\r\n        if(options.onclose) socket.on('close',(code,reason)=>{options.onclose(code,reason,socket,this.sockets[address]);});\r\n        if(options.onerror) socket.on('error',(er)=>{options.onerror(er,socket,this.sockets[address]);});\r\n\r\n        this.sockets[address] = {\r\n            socket,\r\n            address,\r\n            ...options\r\n        }\r\n\r\n        return socket;\r\n\r\n    }\r\n\r\n    transmit = (\r\n        message:string | ArrayBufferLike | Blob | ArrayBufferView | Buffer[] | ServiceMessage, \r\n        ws:WebSocketServer|WebSocket,\r\n    ) => {\r\n        if(typeof message === 'object') message = JSON.stringify(message);\r\n\r\n        if(!ws) {\r\n            \r\n            let served = this.servers[Object.keys(this.servers)[0]];\r\n            if(served) ws = served.wss; //select first websocket server to transmit to all clients\r\n            else {//else select first active socket to transmit to one endpoint\r\n                let s = this.sockets[Object.keys(this.sockets)[0]];\r\n                if(s) ws = s.socket; \r\n            };\r\n        }\r\n        if(ws instanceof WebSocketServer) { //broadcast to all clients\r\n            ws.clients.forEach((c:WebSocket) => {c.send(message)})\r\n        }\r\n        else if(ws instanceof WebSocket) ws.send(message);\r\n    }\r\n\r\n    closeWS = (ws:WebSocket|string) => {\r\n        if(!ws) {   \r\n            let s = this.sockets[Object.keys(this.sockets)[0]];\r\n            if(s) ws = s.socket; \r\n        }\r\n        else if(typeof ws === 'string') {\r\n            for(const k in this.sockets) {\r\n                if(k.includes(ws)) {\r\n                    ws = this.sockets[k].socket;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(ws instanceof WebSocket) \r\n            if(ws.readyState === ws.OPEN) \r\n                ws.close();\r\n    }\r\n\r\n    terminate = (ws:WebSocketServer|WebSocket|string) => {\r\n        if(!ws) {\r\n            let served = this.servers[Object.keys(this.servers)[0]];\r\n            if(served) ws = served.wss; //select first websocket server to transmit to all clients\r\n        }\r\n        else if(typeof ws === 'string') {\r\n            for(const k in this.servers) {\r\n                if(k.includes(ws)) {\r\n                    ws = this.servers[k].wss;\r\n                    break;\r\n                }\r\n            }\r\n            if(!ws) {\r\n                for(const k in this.sockets) {\r\n                    if(k.includes(ws as string)) {\r\n                        ws = this.sockets[k].socket;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(ws instanceof WebSocketServer) \r\n            ws.close((er) => {if(er) console.error(er);});\r\n        else if(ws instanceof WebSocket)\r\n            if(ws.readyState === ws.OPEN) \r\n                ws.close();\r\n    }\r\n\r\n    routes:Routes={\r\n        setupWSS:this.setupWSS,\r\n        openWS:this.openWS,\r\n        closeWS:this.closeWS,\r\n        terminate:(path:string) => {\r\n            if(path) {\r\n                for (const address in this.servers) {\r\n                    if(address.includes(path)) {\r\n                        this.terminate(this.servers[address].wss);\r\n                        delete this.servers[address];\r\n\r\n                    }\r\n                }\r\n            } else {\r\n                path = Object.keys(this.servers)[0];\r\n                this.terminate(this.servers[path].wss);\r\n                delete this.servers[path];\r\n            }\r\n        }\r\n    }\r\n\r\n}", "function exitHandler(options, exitCode) {\r\n        \r\n    if (exitCode || exitCode === 0) console.log('SERVER EXITED WITH CODE: ',exitCode);\r\n    if (options.exit) process.exit();\r\n}\r\n\r\n//do something when app is closing\r\nprocess.on('exit', exitHandler.bind(null,{cleanup:true}));\r\n\r\n//catches ctrl+c event\r\nprocess.on('SIGINT', exitHandler.bind(null, {exit:true}));\r\n\r\n\r\n//run backends\r\n//import { Router } from \"../../routers/Router\";\r\nimport { UserRouter } from \"../../routers/users/User.router\";\r\nimport { HTTPbackend, ServerProps, ServerInfo } from '../../services/http/HTTP.node';\r\nimport { SSEbackend, SSEProps } from '../../services/sse/SSE.node';\r\nimport { WSSbackend, SocketServerProps } from '../../services/wss/WSS.node';\r\n\r\n//create http server\r\n//create wss\r\n//create sse\r\n//create webrtc\r\n\r\n//send messages to each endpoint from each other endpoint on frontend and backend\r\n\r\n//send same message from each endpoint and get same result out of each endpoint\r\n\r\nlet router = new UserRouter([\r\n    HTTPbackend,\r\n    WSSbackend,\r\n    SSEbackend\r\n]);\r\n\r\n//when ping is run it should pong through wss and sse now\r\n\r\n//console.log(router);\r\n\r\nrouter.run(\r\n    'http/setupServer',\r\n    {\r\n        protocol:'http',\r\n        host:'localhost',\r\n        port:8080,\r\n        startpage:'index.html',\r\n        // certpath:'cert.pem', \r\n        // keypath:'key.pem',\r\n        // passphrase:'encryption',\r\n        //errpage:undefined,\r\n        pageOptions:{\r\n            all:{\r\n                inject:{\r\n                    hotreload:'ws://localhost:8080/hotreload'\r\n                }\r\n            }\r\n        }\r\n    } as ServerProps\r\n).then((served:ServerInfo) => { //this function returns a promise so we can use .then, only explicitly async or promise-returning functions can be awaited or .then'd for good performance!\r\n    \r\n    const socketserver = router.run(\r\n        'wss/setupWSS',\r\n        {\r\n            server:served.server,\r\n            host:served.host,\r\n            port:8081,\r\n            path:'wss',\r\n            onconnection:(ws)=>{\r\n                ws.send('Hello from WSS!');\r\n            }\r\n        } as SocketServerProps\r\n    );\r\n    \r\n    const hotreload = router.run(\r\n        'wss/setupWSS',\r\n        {\r\n            server:served.server,\r\n            host:served.host,\r\n            port:7000,\r\n            path:'hotreload',\r\n            onconnection:(ws)=>{\r\n                ws.send('Hot reload port opened!');\r\n            }\r\n        } as SocketServerProps\r\n    );\r\n\r\n    const sseinfo = router.run(\r\n        'sse/setupSSE',\r\n        {\r\n            server:served.server,\r\n            path:'sse',\r\n            channels:['test'],\r\n            onconnection:(session,sseinfo,req,res)=>{\r\n                console.log('pushing sse!')\r\n                session.push('Hello from SSE!');\r\n                sseinfo.channels.forEach(\r\n                    (c:string) => sseinfo.channel.broadcast(\r\n                        'SSE connection at '+req.headers.host+'/'+req.url, c \r\n                    )\r\n                );\r\n            },\r\n        } as SSEProps\r\n    )\r\n\r\n    //console.log(socketserver);\r\n    //console.log(sseinfo)\r\n}); //make a default server\r\n//router.services.http.service.run('setupServer');\r\n//router.services.http.setupServer();\r\n//router.services.http.routes.setupServer();\r\n//router.routes.['http/setupServer'](); //this the original function/property object, it won't set state.\r\n\r\n\r\nconsole.log('main service routes',router.service.routes);\r\nconsole.log('http service routes',router.services.http.routes);\r\n\r\n\r\nconst sub1 = router.pipe('ping','log','wss');\r\nconst sub2 = router.pipe('ping','log','sse');\r\n"],
  "mappings": "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",
  "names": []
}
