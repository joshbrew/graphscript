(()=>{var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __commonJS=(cb,mod)=>function __require(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from==="object"||typeof from==="function"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:true}):target,mod));var require_browser=__commonJS({"../node_modules/web-worker/cjs/browser.js"(exports,module){module.exports=Worker}});var EventHandler=class{constructor(data){this.pushToState={};this.data={};this.triggers={};this.setState=updateObj=>{Object.assign(this.data,updateObj);for(const prop of Object.getOwnPropertyNames(updateObj)){if(this.triggers[prop])this.triggers[prop].forEach(obj=>obj.onchange(this.data[prop]))}return this.data};this.setValue=(key,value)=>{this.data[key]=value;if(this.triggers[key])this.triggers[key].forEach(obj=>obj.onchange(this.data[key]))};this.subscribeTrigger=(key,onchange)=>{if(key){if(!this.triggers[key]){this.triggers[key]=[]}let l=this.triggers[key].length;this.triggers[key].push({idx:l,onchange});return this.triggers[key].length-1}else return void 0};this.unsubscribeTrigger=(key,sub)=>{let triggers=this.triggers[key];if(triggers){if(!sub)delete this.triggers[key];else{let idx=void 0;let obj=triggers.find((o,i)=>{if(o.idx===sub){idx=i;return true}});if(obj)triggers.splice(idx,1);return true}}};this.subscribeTriggerOnce=(key,onchange)=>{let sub;let changed=value=>{onchange(value);this.unsubscribeTrigger(key,sub)};sub=this.subscribeTrigger(key,changed)};if(typeof data==="object")this.data=data}};var state=new EventHandler;var GraphNode=class{constructor(properties,parent,graph){this._node={tag:`node${Math.floor(Math.random()*1e15)}`,unique:`${Math.random()}`,state};this._subscribe=(callback,key,subInput)=>{if(key){if(!this._node.localState){this._addLocalState(this)}if(typeof callback==="string"){if(this._node.graph)callback=this._node.graph.get(callback);else callback=this._node.graph.nodes.get(callback)}if(typeof callback==="function"){return this._node.events.subscribeTrigger(subInput?key+"input":subInput,callback)}else if(callback?._node)return this._node.events.subscribeTrigger(subInput?key+"input":key,state2=>{if(callback._node.operator)callback._node.operator(state2)})}else{if(typeof callback==="string"){if(this._node.graph)callback=this._node.graph.get(callback);else callback=this._node.graph.nodes.get(callback)}if(typeof callback==="function"){return this._node.state.subscribeTrigger(subInput?this._node.tag+"input":this._node.tag,callback)}else if(callback?._node)return this._node.state.subscribeTrigger(subInput?this._node.tag+"input":this._node.tag,res=>{if(callback._node.operator)callback._node.operator(res)})}};this._subscribeState=callback=>{if(typeof callback==="string"){if(this._node.graph)callback=this._node.graph.get(callback);else callback=this._node.graph.nodes.get(callback)}if(typeof callback==="function"){return this._node.state.subscribeTrigger(this._node.unique,callback)}else if(callback?._node)return this._node.state.subscribeTrigger(this._node.unique,state2=>{if(callback?._node.operator)callback._node.operator(state2)})};this._unsubscribe=(sub,key,subInput)=>{if(key&&this._node.events)return this._node.events.unsubscribeTrigger(subInput?key+"input":key,sub);else return this._node.state.unsubscribeTrigger(subInput?this._node.tag+"input":this._node.tag,sub)};this._setOperator=fn=>{fn=fn.bind(this);this._node.operator=(...args)=>{if(this._node.inputState)this._node.events.setValue(this._node.tag+"input",args);let result=fn(...args);if(typeof result?.then==="function"){result.then(res=>{if(res!==void 0)this._node.state.setValue(this._node.tag,res)}).catch(console.error)}else if(result!==void 0)this._node.state.setValue(this._node.tag,result);return result};return this._node.operator};if(typeof properties==="function"){properties={_node:{operator:properties,tag:properties.name}}}else if(typeof properties==="string"){if(graph?.get(properties)){properties=graph.get(properties)}}if(typeof properties==="object"){if(typeof properties._node==="string"){if(graph?.get(properties._node)){properties=graph.get(properties._node)}else properties._node={}}else if(!properties._node)properties._node={};if(parent)properties._node.parent=parent;if(graph)properties._node.graph=graph;if(typeof properties.default==="function")properties.default=this._setOperator(properties.default);else if(properties._node.operator){if(typeof properties._node.operator==="string"){if(graph){let n=graph.get(properties._node.operator);if(n)properties._node.operator=n._node.operator;if(!properties._node.tag&&properties._node.operator.name)properties._node.tag=properties._node.operator.name}}if(typeof properties._node.operator==="function")properties._node.operator=this._setOperator(properties._node.operator)}if(!properties._node.tag){if(properties._node.operator?.name)properties._node.tag=properties._node.operator.name;else properties._node.tag=`node${Math.floor(Math.random()*1e15)}`}if(parent?._node&&(!(parent instanceof Graph)||properties instanceof Graph))properties._node.tag=parent._node.tag+"."+properties._node.tag;if(parent instanceof Graph&&properties instanceof Graph){if(properties._node.loaders)Object.assign(parent._node.loaders?parent._node.loaders:{},properties._node.loaders);if(parent._node.mapGraphs){properties._node.nodes.forEach(n=>{parent._node.nodes.set(properties._node.tag+"."+n._node.tag,n)});let ondelete=()=>{properties._node.nodes.forEach(n=>{parent._node.nodes.delete(properties._node.tag+"."+n._node.tag)})};if(Array.isArray(this._node.ondelete)){this._node.ondelete.push(ondelete)}else if(this._node.ondelete){this._node.ondelete=[ondelete,this._node.ondelete]}else this._node.ondelete=[ondelete]}}properties._node.initial=properties;properties._node=Object.assign(this._node,properties._node);Object.assign(this,properties);if(properties._node.operator&&parent instanceof GraphNode&&parent._node.operator){let sub=parent._subscribe(this);let ondelete=()=>{parent?._unsubscribe(sub)};if(Array.isArray(this._node.ondelete)){this._node.ondelete.push(ondelete)}else if(this._node.ondelete){this._node.ondelete=[ondelete,this._node.ondelete]}else this._node.ondelete=[ondelete]}if(properties instanceof Graph)this._node.source=properties;if(typeof this._node.oncreate==="function"){this._node.oncreate(this)}else if(Array.isArray(this._node.oncreate)){this._node.oncreate.forEach(o=>{o(this)})}}}_addLocalState(props){if(!props)return;if(!this._node.localState){this._node.localState={}}if(!this._node.events){this._node.events=new EventHandler(this._node.localState)}let localState=this._node.localState;for(let k in props){if(typeof props[k]==="function"){if(!k.startsWith("_")){let fn=props[k].bind(this);props[k]=(...args)=>{if(this._node.inputState)this._node.events.setValue(k+"input",args);let result=fn(...args);if(typeof result?.then==="function"){result.then(res=>{this._node.events.setValue(k,res)}).catch(console.error)}else this._node.events.setValue(k,result);return result};this[k]=props[k]}}else{localState[k]=props[k];let definition={get:()=>{return localState[k]},set:v=>{if(this._node.state.triggers[this._node.unique]){this._node.state.setValue(this._node.unique,this)}this._node.events.setValue(k,v)},enumerable:true,configurable:true};Object.defineProperty(this,k,definition);const ogProps=this._node.initial;let dec=Object.getOwnPropertyDescriptor(ogProps,k);if(dec===void 0||dec?.configurable)Object.defineProperty(ogProps,k,definition)}}}};var Graph=class{constructor(options){this._node={tag:`graph${Math.floor(Math.random()*1e15)}`,nodes:new Map,state};this.init=options=>{if(options){recursivelyAssign.call(this,this._node,options);if(options.tree)this.setTree(options.tree)}};this.setTree=tree=>{this._node.tree=Object.assign(this._node.tree?this._node.tree:{},tree);let cpy=Object.assign({},tree);delete cpy._node;let listeners=this.recursiveSet(cpy,this);if(tree._node){if(!tree._node.tag)tree._node._tag=`tree${Math.floor(Math.random()*1e15)}`;let node=new GraphNode(tree,this,this);for(const l in this._node.loaders){this._node.loaders[l](node,this,this,tree)}this._node.nodes.set(node._node.tag,node);if(node._node.listeners){listeners[node._node.tag]=node._node.listeners}}this.setListeners(listeners)};this.setLoaders=(loaders2,replace)=>{if(replace)this._node.loaders=loaders2;else Object.assign(this._node.loaders,loaders2);return this._node.loaders};this.add=(properties,parent)=>{let listeners={};if(typeof parent==="string")parent=this.get(parent);let node=new GraphNode(properties,parent,this);for(const l in this._node.loaders){this._node.loaders[l](node,parent,this,properties)}this._node.nodes.set(node._node.tag,node);if(node._node.listeners){listeners[node._node.tag]=node._node.listeners}if(node._node.children){node._node.children=Object.assign({},node._node.children);this.recursiveSet(node._node.children,node,listeners)}if(node._node.tree)this.setTree(node._node.tree);this.setListeners(listeners);return node};this.recursiveSet=(t,parent,listeners={})=>{for(const key in t){let p=t[key];if(Array.isArray(p))continue;if(typeof p==="function")p={_node:{operator:p}};else if(typeof p==="string")p=this._node.tree[p];else if(typeof p==="boolean")p=this._node.tree[key];else if(typeof p.default==="function"){p._node.operator=p.default}if(typeof p==="object"){p=Object.assign({},p);if(!p._node)p._node={};if(!p._node.tag)p._node.tag=key;if(this.get(p._node.tag))continue;let node=new GraphNode(p,parent,this);for(const l in this._node.loaders){this._node.loaders[l](node,parent,this,t)}t[key]=node;this._node.tree[node._node.tag]=p;this.set(node._node.tag,node);if(node._node.listeners){listeners[node._node.tag]=node._node.listeners}else if(node._node.children){node._node.children=Object.assign({},node._node.children);this.recursiveSet(node._node.children,node,listeners)}if(node._node.tree)this.setTree(node._node.tree)}}return listeners};this.remove=(node,clearListeners=true)=>{this.unsubscribe(node);if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){this._node.nodes.delete(node._node.tag);delete this._node.tree[node._node.tag];if(clearListeners){this.clearListeners(node)}if(typeof node._node.ondelete==="function")node._node.ondelete(node);else if(Array.isArray(node._node.ondelete)){node._node.ondelete.forEach(o=>{o(node)})}const recursiveRemove=t=>{for(const key in t){this.unsubscribe(t[key]);this._node.nodes.delete(t[key]._node.tag);delete this._node.tree[t[key]._node.tag];this._node.nodes.delete(key);delete this._node.tree[key];t[key]._node.tag=t[key]._node.tag.substring(t[key]._node.tag.lastIndexOf(".")+1);if(clearListeners){this.clearListeners(t[key])}if(typeof t[key]?._node?.ondelete==="function")t[key]._node.ondelete(t[key]);else if(Array.isArray(t[key]?._node.ondelete)){t[key]?._node.ondelete.forEach(o=>{o(node)})}if(t[key]._node.children){recursiveRemove(t[key]._node.children)}}};if(node._node.children){recursiveRemove(node._node.children)}}if(node?._node.tag&&node?._node.parent){delete node?._node.parent;node._node.tag=node._node.tag.substring(node._node.tag.indexOf(".")+1)}return node};this.removeTree=tree=>{};this.run=(node,...args)=>{if(typeof node==="string")node=this.get(node);if(node?._node?.operator){return node?._node?.operator(...args)}};this.setListeners=listeners=>{for(const key in listeners){let node=this.get(key);if(typeof listeners[key]==="object"){for(const k in listeners[key]){let n=this.get(k);let sub;if(typeof listeners[key][k]==="function")listeners[key][k]={callback:listeners[key][k]};listeners[key][k].callback=listeners[key][k].callback.bind(node);if(typeof node._node.listeners!=="object")node._node.listeners={};if(!n){let tag=k.substring(0,k.lastIndexOf("."));n=this.get(tag);if(n){sub=this.subscribe(n,k.substring(k.lastIndexOf(".")+1),listeners[key][k].callback,listeners[key][k].inputState);if(typeof node._node.listeners[k]!=="object")node._node.listeners[k]={callback:listeners[key][k].callback,inputState:listeners[key][k]?.inputState};node._node.listeners[k].sub=sub}}else{sub=this.subscribe(n,void 0,listeners[key][k].callback,listeners[key][k].inputState);if(typeof node._node.listeners[k]!=="object")node._node.listeners[k]={callback:listeners[key][k].callback,inputState:listeners[key][k]?.inputState};node._node.listeners[k].sub=sub}}}}};this.clearListeners=(node,listener)=>{if(typeof node==="string")node=this.get(node);if(node?._node.listeners){for(const key in node._node.listeners){if(listener&&key!==listener)continue;if(typeof node._node.listeners[key].sub!=="number")continue;let n=this.get(key);if(!n){n=this.get(key.substring(0,key.lastIndexOf(".")));if(n)this.unsubscribe(n,key.substring(key.lastIndexOf(".")+1),node._node.listeners[key].sub,node._node.listeners[key].inputState)}else{this.unsubscribe(n,void 0,node._node.listeners[key].sub,node._node.listeners[key].inputState)}delete node._node.listeners[key]}}};this.get=tag=>{return this._node.nodes.get(tag)};this.set=(tag,node)=>{this._node.nodes.set(tag,node)};this.getProps=(node,getInitial)=>{if(typeof node==="string")node=this.get(node);if(node instanceof GraphNode){let cpy;if(getInitial)cpy=Object.assign({},this._node.tree[node._node.tag]);else{cpy=Object.assign({},node);delete cpy._unsubscribe;delete cpy._setOperator;delete cpy._node;delete cpy._subscribeState;delete cpy._subscribe}}};this.subscribe=(node,key,callback,subInput)=>{let nd;if(!(node instanceof GraphNode))nd=this.get(node);let sub;if(nd instanceof GraphNode){sub=nd._subscribe(callback,key,subInput);let ondelete=()=>{nd._unsubscribe(sub,key,subInput)};if(nd._node.ondelete){if(Array.isArray(nd._node.ondelete)){nd._node.ondelete.push(ondelete)}else nd._node.ondelete=[ondelete,nd._node.ondelete]}else nd._node.ondelete=[ondelete]}else if(typeof node==="string"){if(typeof callback==="string")callback=this.get(callback);if(callback instanceof GraphNode&&callback._node.operator){sub=this._node.state.subscribeTrigger(node,callback._node.operator);let ondelete=()=>{this._node.state.unsubscribeTrigger(node,sub)};if(callback._node.ondelete){if(Array.isArray(callback._node.ondelete)){callback._node.ondelete.push(ondelete)}else callback._node.ondelete=[ondelete,callback._node.ondelete]}else callback._node.ondelete=[ondelete]}else if(typeof callback==="function")sub=this._node.state.subscribeTrigger(node,callback)}return sub};this.unsubscribe=(node,key,sub,subInput)=>{if(node instanceof GraphNode){return node._unsubscribe(sub,key,subInput)}else return this.get(node)?._unsubscribe(sub,key,subInput)};this.setState=update=>{this._node.state.setState(update)};this.init(options)}};function recursivelyAssign(target,obj){for(const key in obj){if(obj[key]?.constructor.name==="Object"&&!Array.isArray(obj[key])){if(target[key]?.constructor.name==="Object"&&!Array.isArray(target[key]))recursivelyAssign(target[key],obj[key]);else target[key]=recursivelyAssign({},obj[key])}else{target[key]=obj[key]}}return target}var backprop=(node,parent,graph)=>{if(node._node.backward&&parent instanceof GraphNode){graph.setListeners({[parent._node.tag]:{[node._node.tag]:parent}})}};var loop=(node,parent,graph)=>{if(node._node.operator&&!node._node.looperSet){node._node.looperSet=true;if(typeof node._node.delay==="number"){let fn=node._node.operator;node._node.operator=(...args)=>{return new Promise((res,rej)=>{setTimeout(async()=>{res(await fn(...args))},node._node.delay)})}}else if(node._node.frame===true){let fn=node._node.operator;node._node.operator=(...args)=>{return new Promise((res,rej)=>{requestAnimationFrame(async()=>{res(await fn(...args))})})}}if(typeof node._node.repeat==="number"||typeof node._node.recursive==="number"){let fn=node._node.operator;node._node.operator=async(...args)=>{let i=node._node.repeat?node._node.repeat:node._node.recursive;let result;let repeater=async(tick,...inp)=>{while(tick>0){if(node._node.delay||node._node.frame){fn(...inp).then(async res=>{if(node._node.recursive){await repeater(tick,res)}else await repeater(tick,...inp)});break}else result=await fn(...args);tick--}};await repeater(i,...args);return result}}if(node._node.loop&&typeof node._node.loop==="number"){if(!("looping"in node._node))node._node.looping=true;node._node.looper=()=>{if(node._node.looping){node._node.operator();setTimeout(node._node.looper,node._node.loop)}};if(node._node.looping)node._node.looper();let ondelete=node2=>{if(node2._node.looping)node2._node.looping=false};if(typeof node._node.ondelete==="undefined")node._node.ondelete=[ondelete];else if(typeof node._node.ondelete==="function")node._node.ondelete=[ondelete,node._node.ondelete];else if(Array.isArray(node._node.ondelete))node._node.ondelete.unshift(ondelete)}}};var animate=(node,parent,graph)=>{if(node._node.animate===true||node._node.animation){if(typeof node._node.animate==="function")node._node.animate=node._node.animate.bind(node);let anim=node2=>{if(!("animating"in node2._node))node2._node.animating=true;node2._node.animate=()=>{if(node2._node.animating){if(typeof node2._node.animate==="function")node2._node.animation();else node2._node.operator();requestAnimationFrame(node2._node.animation)}};requestAnimationFrame(node2._node.animation);if(node2._node.animating)node2._node.animation()};requestAnimationFrame(anim);let ondelete=node2=>{if(node2._node.animating)node2._node.animating=false};if(typeof node._node.ondelete==="undefined")node._node.ondelete=[ondelete];else if(typeof node._node.ondelete==="function")node._node.ondelete=[ondelete,node._node.ondelete];else if(Array.isArray(node._node.ondelete))node._node.ondelete.unshift(ondelete)}};var branching=(node,parent,graph)=>{if(typeof node._node.branch==="object"&&node._node.operator&&!node._node.branchApplied){let fn=node._node.operator;node._node.branchApplied=true;node._node.operator=(...args)=>{let result=fn(...args);for(const key in node._node.branch){let triggered=()=>{if(typeof node._node.branch[key].then==="function"){node._node.branch[key].then(result)}else if(node._node.branch[key].then instanceof GraphNode&&node._node.branch[key].then._node.operator){node._node.branch[key].then._node.operator(result)}else result=node._node.branch[key].then};if(typeof node._node.branch[key].if==="function"){if(node._node.branch[key].if(result)){triggered()}}else if(node._node.branch[key].if===result){triggered()}}return result}}if(node._node.listeners){for(const key in node._node.listeners){if(typeof node._node.listeners[key]==="object"){if(node._node.listeners[key].branch&&!node._node.listeners[key].branchApplied){let fn=node._node.listeners[key].callback;node._node.listeners[key].branchApplied=true;node._node.listeners.callback=ret=>{let triggered=()=>{if(typeof node._node.listeners[key].branch.then==="function"){node._node.listeners[key].branch.then(ret)}else if(node._node.listeners[key].branch.then instanceof GraphNode&&node._node.listeners[key].branch.then._node.operator){node._node.listeners[key].branch.then._node.operator(ret)}else ret=node._node.listeners[key].branch.then};if(typeof node._node.listeners[key].branch.if==="function"){if(node._node.listeners[key].branch.if(ret)){triggered()}}else if(node._node.listeners[key].branch.if===ret){triggered()}return fn(ret)}}}}}};var triggerListenerOncreate=(node,parent,graph)=>{if(node._node.listeners){for(const key in node._node.listeners){if(typeof node._node.listeners[key]==="object"){if(node._node.listeners[key].oncreate){node._node.listeners[key].callback(node._node.listeners[key].oncreate)}}}}};var bindListener=(node,parent,graph)=>{if(node._node.listeners){for(const key in node._node.listeners){if(typeof node._node.listeners[key]==="object"){if(typeof node._node.listeners[key].binding==="object"){node._node.listeners.callback=node._node.listeners.callback.bind(node._node.listeners[key].binding)}}}}};var transformListenerResult=(node,parent,graph)=>{if(node._node.listeners){for(const key in node._node.listeners){if(typeof node._node.listeners[key]==="object"){if(typeof node._node.listeners[key].transform==="function"&&!node._node.listeners[key].transformApplied){let fn=node._node.listeners[key].callback;node._node.listeners[key].transformApplied=true;node._node.listeners.callback=ret=>{ret=node._node.listeners[key].transform(ret);return fn(ret)}}}}}};var substitute_operator=(node,parent,graph)=>{if(node.post&&!node._node.operator){node._setOperator(node.post)}else if(!node._node.operator&&typeof node.get=="function"){node._setOperator(node.get)}if(node.aliases){node.aliases.forEach(a=>{graph._node.nodes.set(a,node);let ondelete=node2=>{graph._node.nodes.delete(a)};if(typeof node._node.ondelete==="undefined")node._node.ondelete=[ondelete];else if(typeof node._node.ondelete==="function")node._node.ondelete=[ondelete,node._node.ondelete];else if(Array.isArray(node._node.ondelete))node._node.ondelete.unshift(ondelete)})}};var loaders={backprop,loop,animate,branching,triggerListenerOncreate,bindListener,transformListenerResult,substitute_operator};var Service=class extends Graph{constructor(options){super({...options,loaders:options?.loaders?Object.assign({...loaders},options.loaders):{...loaders}});this.name=`service${Math.floor(Math.random()*1e15)}`;this.handleMethod=(route,method,args)=>{let m=method.toLowerCase();let src=this._node.nodes.get(route);if(!src){src=this._node.tree[route]}if(src?.[m]){if(!(src[m]instanceof Function)){if(args)src[m]=args;return src[m]}else return src[m](args)}else return this.handleServiceMessage({route,args,method})};this.transmit=(...args)=>{if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this._node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.receive=(...args)=>{if(args[0]){if(typeof args[0]==="string"){let substr=args[0].substring(0,8);if(substr.includes("{")||substr.includes("[")){if(substr.includes("\\"))args[0]=args[0].replace(/\\/g,"");if(args[0][0]==='"'){args[0]=args[0].substring(1,args[0].length-1)};args[0]=JSON.parse(args[0])}}}if(typeof args[0]==="object"){if(args[0].method){return this.handleMethod(args[0].route,args[0].method,args[0].args)}else if(args[0].route){return this.handleServiceMessage(args[0])}else if(args[0].node){return this.handleGraphNodeCall(args[0].node,args[0].args)}else if(this._node.keepState){if(args[0].route)this.setState({[args[0].route]:args[0].args});if(args[0].node)this.setState({[args[0].node]:args[0].args})}return args}else return args};this.pipe=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return this.subscribe(source,void 0,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this.subscribe(source,void 0,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this.subscribe(source,void 0,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.pipeOnce=(source,destination,endpoint,method,callback)=>{if(source instanceof GraphNode){if(callback)return source._node.state.subscribeTriggerOnce(source._node.tag,res=>{let mod=callback(res);if(mod!==void 0)this.transmit({route:destination,args:mod,method});else this.transmit({route:destination,args:res,method},endpoint)});else return this._node.state.subscribeTriggerOnce(source._node.tag,res=>{this.transmit({route:destination,args:res,method},endpoint)})}else if(typeof source==="string")return this._node.state.subscribeTriggerOnce(source,res=>{this.transmit({route:destination,args:res,method},endpoint)})};this.terminate=(...args)=>{};this.isTypedArray=isTypedArray;this.recursivelyAssign=recursivelyAssign2;this.spliceTypedArray=spliceTypedArray;this.ping=()=>{console.log("pinged");return"pong"};this.echo=(...args)=>{this.transmit(...args);return args};if(options?.services)this.addServices(options.services);this.setTree(this)}addServices(services){for(const s in services){if(typeof services[s]==="function")this.setTree(new services[s]);else if(typeof services[s]==="object")this.setTree(services[s])}}handleServiceMessage(message){let call;if(typeof message==="object"){if(message.route)call=message.route;else if(message.node)call=message.node}if(call){if(Array.isArray(message.args))return this.run(call,...message.args);else return this.run(call,message.args)}else return message}handleGraphNodeCall(route,args){if(!route)return args;if(args?.args){this.handleServiceMessage(args)}else if(Array.isArray(args))return this.run(route,...args);else return this.run(route,args)}};function isTypedArray(x){return ArrayBuffer.isView(x)&&Object.prototype.toString.call(x)!=="[object DataView]"}var recursivelyAssign2=(target,obj)=>{for(const key in obj){if(typeof obj[key]==="object"&&!Array.isArray(obj[key])){if(typeof target[key]==="object"&&!Array.isArray(target[key]))recursivelyAssign2(target[key],obj[key]);else target[key]=recursivelyAssign2({},obj[key])}else target[key]=obj[key]}return target};function spliceTypedArray(arr,start,end){let s=arr.subarray(0,start);let e;if(end){e=arr.subarray(end+1)}let ta;if(s.length>0||e?.length>0)ta=new arr.constructor(s.length+e.length);if(ta){if(s.length>0)ta.set(s);if(e&&e.length>0)ta.set(e,s.length)}return ta}var import_web_worker=__toESM(require_browser());var WorkerService=class extends Service{constructor(options){super();this.name="worker";this.workers={};this.threadRot=0;this.loadWorkerRoute=(rt,routeKey)=>{if(rt.workerUrl)rt.url=rt.workerUrl;if(rt.workerId)rt._node.tag=rt.workerId;if(!rt._node.tag)rt._node.tag=routeKey;rt._id=rt._node.tag;let worker;if(this.workers[rt._id])worker=this.workers[rt._id];else if(rt.worker)worker=rt.worker;if(!worker){worker=this.addWorker(rt);let ondelete=rt2=>{rt2.worker?.terminate()};let oldondelete;if(rt.ondelete)oldondelete=rt.ondelete;rt.ondelete=n=>{if(oldondelete)oldondelete(n);ondelete(n)}}rt.worker=worker;if(rt.transferFunctions){for(const prop in rt.transferFunctions){this.transferFunction(worker,rt.transferFunctions[prop],prop)}}if(rt.transferClasses){for(const prop in rt.transferClasses){this.transferClass(worker,rt.transferClasses[prop],prop)}}if(worker){if(!rt.operator){rt.operator=(...args)=>{if(rt.callback){if(!this._node.nodes.get(rt._node.tag)?.children)worker.post(rt.callback,args);else return worker.run(rt.callback,args)}else{if(!this._node.nodes.get(rt._node.tag)?.children)worker.send(args);else return worker.request(args)}}}if(rt.init){worker.run(rt.init,rt.initArgs,rt.initTransfer)}return worker}};this.workerloader={"workers":(node,parent,graph,tree)=>{let rt=node;if(rt?.worker||rt?.workerId||rt?.workerUrl){if(!node.parentRoute&&parent?.callback)node.parentRoute=parent?.callback;let worker=this.loadWorkerRoute(rt,rt._node.tag);if(worker){if(!rt.parentRoute&&rt._node.parent?.callback)rt.parentRoute=rt._node.parent.callback;if(rt._node.parent&&!rt.portId){if(typeof rt._node.parent==="string"){if(rt._node.tag!==rt._node.parent&&worker._id!==rt._node.parent)rt.portId=this.establishMessageChannel(worker,rt._node.parent)}else if(rt._node.tag!==rt._node.parent._node.tag&&worker._id!==rt._node.parent.tag){rt.portId=this.establishMessageChannel(worker,rt._node.parent.worker)}};if(rt.parentRoute){if(!rt.stopped){if(typeof rt._node.parent==="string"&&rt._node.parent===worker._id){worker.run("subscribe",[rt.parentRoute,void 0,rt.callback])}else if(rt._node.tag===rt._node.parent?._node.tag||worker._id===rt._node.parent?._node.tag){worker.run("subscribe",[rt.parentRoute,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.parentRoute,rt.portId,rt.callback,rt.blocking]).then(sub=>{worker.workerSubs[rt.parentRoute+rt.portId].sub=sub})}if(!(typeof rt._node.parent==="string"&&rt._node.parent===worker._id)&&!(rt._node.tag===rt._node.parent._node.tag||worker._id===rt._node.parent._node.tag))worker.workerSubs[rt.parentRoute+rt.portId]={sub:null,route:rt.parentRoute,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}else if(rt._node.parent){if(typeof rt._node.parent==="string"){if(!rt.stopped){if(rt.parent===worker._id){worker.run("subscribe",[rt.parent,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt.parent,rt.portId,rt.callback,rt.blocking]).then(sub=>{worker.workerSubs[rt.parentRoute+rt.portId].sub=sub})}if(!(typeof rt._node.parent==="string"&&rt.parent===worker._id))worker.workerSubs[rt.parentRoute+rt.portId]={sub:null,route:rt.parentRoute,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}else if(rt._node.parent?._node.tag){if(!rt.stopped){if(rt._node.tag===rt._node.parent._node.tag||worker._id===rt._node.parent._node.tag){worker.run("subscribe",[rt._node.parent._node.tag,void 0,rt.callback])}else worker.run("subscribeToWorker",[rt._node.parent._node.tag,rt.portId,rt.callback,rt.blocking]).then(sub=>{worker.workerSubs[rt.parentRoute+rt.portId].sub=sub})}if(!(rt._node.tag===rt._node.parent_node.tag||worker._id===rt._node.parent._node.tag))worker.workerSubs[rt.parentRoute+rt.portId]={sub:null,route:rt.parentRoute,portId:rt.portId,callback:rt.callback,blocking:rt.blocking}}}}}else if(rt.parent&&rt.parentRoute){if(typeof rt.parent==="string"&&tree[rt.parent]?.worker){tree[rt.parent].worker.subscribe(rt.parentRoute,rt.tag,rt.blocking)}else if(rt.parent?.worker){rt.parent.worker.subscribe(rt.parentRoute,rt.tag,rt.blocking)}}return rt}};this.addDefaultMessageListener=()=>{globalThis.onmessage=ev=>{let result=this.receive(ev.data);if(this._node.keepState)this.setState({[this.name]:result})}};this.postMessage=(message,target,transfer)=>{if(this.workers[target]){this.workers[target].send(message,transfer)}else{globalThis.postMessage(message,target,transfer)}};this.addWorker=options=>{let worker;if(!options._id)options._id=`worker${Math.floor(Math.random()*1e15)}`;if(options.url)worker=new import_web_worker.default(options.url);else if(options.port){worker=options.port}else if(this.workers[options._id]){if(this.workers[options._id].port)worker=this.workers[options._id].port;else worker=this.workers[options._id].worker}if(!worker)return;let send=(message,transfer)=>{return this.transmit(message,worker,transfer)};let post=(route,args,transfer,method)=>{let message={route,args};if(method)message.method=method;return this.transmit(message,worker,transfer)};let run=(route,args,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[{route,args},options._id,callbackId]};if(method)req.args[0].method=method;let onmessage=ev=>{if(typeof ev.data==="object"){if(ev.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let request=(message,transfer,method)=>{return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,options._id,callbackId]};if(method)req.method=method;let onmessage=ev=>{if(typeof ev.data==="object"){if(ev.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};let workerSubs={};let subscribe=(route,callback,blocking)=>{return this.subscribeToWorker(route,options._id,callback,blocking)};let unsubscribe=(route,sub)=>{return run("unsubscribe",[route,sub])};let start=async(route,portId,callback,blocking)=>{if(route)await run("subscribeToWorker",[route,portId,callback,blocking]).then(sub=>{if(sub)workerSubs[route+portId]={sub,route,portId,callback,blocking}});else for(const key in workerSubs){if(typeof workerSubs[key].sub!=="number")await run("subscribeToWorker",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].callback,workerSubs[key].blocking]).then(sub=>{workerSubs[key].sub=sub})}return true};let stop=async(route,portId)=>{if(route&&portId&&workerSubs[route+portId]){await run("unsubscribe",[route,workerSubs[route+portId].sub]);workerSubs[route+portId].sub=false}else{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){await run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub])}workerSubs[key].sub=false}}return true};let terminate=()=>{for(const key in workerSubs){if(typeof workerSubs[key].sub==="number"){run("unpipeWorkers",[workerSubs[key].route,workerSubs[key].portId,workerSubs[key].sub])}workerSubs[key].sub=false}return this.terminate(options._id)};if(!options.onmessage)options.onmessage=ev=>{this.receive(ev.data);this.setState({[options._id]:ev.data})};if(!options.onerror){options.onerror=ev=>{console.error(ev.data)}}worker.onmessage=options.onmessage;worker.onerror=options.onerror;this.workers[options._id]={worker,send,post,run,request,subscribe,unsubscribe,terminate,start,stop,postMessage:worker.postMessage,workerSubs,graph:this,...options};return this.workers[options._id]};this.toObjectURL=scriptTemplate=>{let blob=new Blob([scriptTemplate],{type:"text/javascript"});return URL.createObjectURL(blob)};this.transmit=(message,worker,transfer)=>{if(!transfer){transfer=this.getTransferable(message)}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){worker.postMessage(message,transfer)}else if(typeof worker==="string"){if(this.workers[worker]){if(this.workers[worker].port)this.workers[worker].port.postMessage(message,transfer);else if(this.workers[worker].worker)this.workers[worker].worker.postMessage(message,transfer)}}else{let keys=Object.keys(this.workers);this.workers[keys[this.threadRot]].worker.postMessage(message,transfer);this.threadRot++;if(this.threadRot===keys.length)this.threadRot=0}return message};this.terminate=worker=>{let onclose;if(typeof worker==="string"){let obj=this.workers[worker];if(obj)delete this.workers[worker];worker=obj.worker;if(obj.onclose)onclose=obj.onclose}if(worker instanceof import_web_worker.default){worker.terminate();if(onclose)onclose(worker);return true}if(worker instanceof MessagePort){worker.close();if(onclose)onclose(worker);return true}return false};this.establishMessageChannel=(worker,worker2)=>{let workerId;if(typeof worker==="string"){workerId=worker;if(this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker2=this.workers[worker].worker}}else if(worker?.worker){worker=worker.worker}if(typeof worker2==="string"){if(this.workers[worker2]){if(this.workers[worker2].port)worker2=this.workers[worker2].port;else worker2=this.workers[worker2].worker}}else if(worker2?.worker){worker2=worker2.worker}if(worker instanceof import_web_worker.default||worker instanceof MessagePort){let channel=new MessageChannel;let portId=`port${Math.floor(Math.random()*1e15)}`;worker.postMessage({route:"addWorker",args:{port:channel.port1,_id:portId}},[channel.port1]);if(worker2 instanceof import_web_worker.default||worker2 instanceof MessagePort){worker2.postMessage({route:"addWorker",args:{port:channel.port2,_id:portId}},[channel.port2])}else if(workerId&&this.workers[workerId]){channel.port2.onmessage=this.workers[workerId].onmessage;this.workers[workerId].port=channel.port2}return portId}return false};this.request=(message,workerId,transfer,method)=>{let worker=this.workers[workerId].worker;return new Promise((res,rej)=>{let callbackId=Math.random();let req={route:"runRequest",args:[message,callbackId]};if(method)req.method=method;let onmessage=ev=>{if(typeof ev.data==="object"){if(ev.data.callbackId===callbackId){worker.removeEventListener("message",onmessage);res(ev.data.args)}}};worker.addEventListener("message",onmessage);this.transmit(req,worker,transfer)})};this.runRequest=(message,worker,callbackId)=>{let res=this.receive(message);if(typeof worker==="string"&&this.workers[worker]){if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}if(res instanceof Promise){res.then(r=>{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:r,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:r,callbackId})})}else{if(worker instanceof import_web_worker.default||worker instanceof MessagePort)worker.postMessage({args:res,callbackId});else if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)globalThis.postMessage({args:res,callbackId})}return res};this.subscribeWorker=(route,worker,blocking)=>{let callback;if(blocking){let blocked=false;callback=res=>{if(!blocked){blocked=true;if(res instanceof Promise){res.then(r=>{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,r]).then(ret=>{blocked=false})})}else{if(worker?.run)worker.run("triggerSubscription",[route,worker._id,res]).then(ret=>{blocked=false})}}}}else{callback=res=>{if(res instanceof Promise){res.then(r=>{if(worker?.postMessage)worker.postMessage({args:r,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:r,callbackId:route})})}else{if(worker?.postMessage)worker.postMessage({args:res,callbackId:route});else if(globalThis.postMessage)globalThis.postMessage({args:res,callbackId:route})}}}if(!blocking&&worker?.port){worker=worker.port}else if(!blocking&&worker?.worker){worker=worker.worker}else if(typeof worker==="string"&&this.workers[worker]){if(blocking)worker=this.workers[worker];else if(this.workers[worker].port)worker=this.workers[worker].port;else worker=this.workers[worker].worker}return this.subscribe(route,void 0,callback)};this.subscribeToWorker=(route,workerId,callback,blocking)=>{if(typeof workerId==="string"&&this.workers[workerId]){this.subscribe(workerId,void 0,res=>{if(res?.callbackId===route){if(!callback)this.setState({[workerId]:res.args});else if(typeof callback==="string"){this.run(callback,res.args)}else callback(res.args)}});return this.workers[workerId].run("subscribeWorker",[route,workerId,blocking])}};this.triggerSubscription=async(route,workerId,result)=>{if(this._node.state.triggers[workerId])for(let i=0;i<this._node.state.triggers[workerId].length;i++){await this._node.state.triggers[workerId][i].onchange({args:result,callbackId:route})}return true};this.pipeWorkers=(sourceWorker,listenerWorker,sourceRoute,listenerRoute,portId,blocking)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(typeof listenerWorker==="string")listenerWorker=this.workers[listenerWorker];if(!portId){portId=this.establishMessageChannel(sourceWorker.worker,listenerWorker.worker)}return listenerWorker.run("subscribeToWorker",[sourceRoute,portId,listenerRoute,blocking])};this.unpipeWorkers=(sourceRoute,sourceWorker,sub)=>{if(typeof sourceWorker==="string")sourceWorker=this.workers[sourceWorker];if(sourceWorker)return sourceWorker.run("unsubscribe",[sourceRoute,sub])};this.connections={workers:this.workers};if(options?.services)this.addServices(options.services);this.setTree(this);this.setLoaders(this.workerloader);if(options)this.init(options);if(typeof WorkerGlobalScope!=="undefined"&&globalThis instanceof WorkerGlobalScope){this.addDefaultMessageListener()}}getTransferable(message){let transfer;if(typeof message==="object"){if(message.args){if(message.args?.constructor?.name==="Object"){for(const key in message.args){if(ArrayBuffer.isView(message.args[key])){if(!transfer)transfer=[message.args[key].buffer];else transfer.push(message.args[key].buffer)}else if(message.args[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message.args[key]];else transfer.push(message.args[key])}}}else if(Array.isArray(message.args)&&message.args.length<11){message.args.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg?.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message.args)){transfer=[message.args.buffer]}else if(message.args?.constructor?.name==="ArrayBuffer"){transfer=[message]}}else if(message?.constructor?.name==="Object"){for(const key in message){if(ArrayBuffer.isView(message[key])){if(!transfer)transfer=[message[key].buffer];else transfer.push(message[key].buffer)}else if(message[key]?.constructor?.name==="ArrayBuffer"){if(!transfer)transfer=[message[key]];else transfer.push(message[key])}}}else if(Array.isArray(message)&&message.length<11){message.forEach(arg=>{if(ArrayBuffer.isView(arg)){transfer=[arg.buffer]}else if(arg.constructor?.name==="ArrayBuffer")transfer=[arg]})}else if(ArrayBuffer.isView(message)){transfer=[message.buffer]}else if(message.constructor?.name==="ArrayBuffer"){transfer=[message]}}return transfer}transferFunction(worker,fn,fnName){if(!fnName)fnName=fn.name;return worker.request({route:"setRoute",args:[fn.toString(),fnName]})}transferClass(worker,cls,className){if(!className)className=cls.name;return worker.request({route:"receiveClass",args:[cls.toString(),className]})}};var mouseEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","button","pointerType","clientX","clientY","pageX","pageY"]);var wheelEventHandlerImpl=makeSendPropertiesHandler(["deltaX","deltaY"]);var keydownEventHandler=makeSendPropertiesHandler(["ctrlKey","metaKey","shiftKey","keyCode"]);function wheelEventHandler(event,sendFn){event.preventDefault();wheelEventHandlerImpl(event,sendFn)}function preventDefaultHandler(event){event.preventDefault()}function copyProperties(src,properties,dst){for(const name of properties){dst[name]=src[name]}}function makeSendPropertiesHandler(properties){return function sendProperties(event,sendFn){const data={type:event.type};copyProperties(event,properties,data);sendFn(data)}}function touchEventHandler(event,sendFn){const touches=[];const data={type:event.type,touches};for(let i=0;i<event.touches.length;++i){const touch=event.touches[i];touches.push({pageX:touch.pageX,pageY:touch.pageY})}sendFn(data)}var orbitKeys={"37":true,"38":true,"39":true,"40":true};function filteredKeydownEventHandler(event,sendFn){const{keyCode}=event;if(orbitKeys[keyCode]){event.preventDefault();keydownEventHandler(event,sendFn)}}var eventHandlers={contextmenu:preventDefaultHandler,mousedown:mouseEventHandler,mousemove:mouseEventHandler,mouseup:mouseEventHandler,pointerdown:mouseEventHandler,pointermove:mouseEventHandler,pointerup:mouseEventHandler,touchstart:touchEventHandler,touchmove:touchEventHandler,touchend:touchEventHandler,wheel:wheelEventHandler,keydown:filteredKeydownEventHandler};function initProxyElement(element,worker,id){if(!id)id="proxy"+Math.floor(Math.random()*1e15);const sendEvent=data=>{if(!worker){handleProxyEvent(data,id)}else worker.postMessage({route:"handleProxyEvent",args:[data,id]})};let entries=Object.entries(eventHandlers);for(const[eventName,handler]of entries){element.addEventListener(eventName,function(event){handler(event,sendEvent)})}const sendSize=()=>{const rect=element.getBoundingClientRect();sendEvent({type:"resize",left:rect.left,top:rect.top,width:element.clientWidth,height:element.clientHeight})};sendSize();globalThis.addEventListener("resize",sendSize);return id}var EventDispatcher=class{addEventListener(type,listener){if(this._listeners===void 0)this._listeners={};const listeners=this._listeners;if(listeners[type]===void 0){listeners[type]=[]}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener)}}hasEventListener(type,listener){if(this._listeners===void 0)return false;const listeners=this._listeners;return listeners[type]!==void 0&&listeners[type].indexOf(listener)!==-1}removeEventListener(type,listener){if(this._listeners===void 0)return;const listeners=this._listeners;const listenerArray=listeners[type];if(listenerArray!==void 0){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1)}}}dispatchEvent(event,target){if(this._listeners===void 0)return;const listeners=this._listeners;const listenerArray=listeners[event.type];if(listenerArray!==void 0){if(!target)event.target=this;else event.target=target;const array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event)}event.target=null}}};function noop(){}var ElementProxyReceiver=class extends EventDispatcher{constructor(){super();this._listeners={};this.style={};this.setPointerCapture=()=>{};this.releasePointerCapture=()=>{};this.getBoundingClientRect=()=>{return{left:this.left,top:this.top,width:this.width,height:this.height,right:this.left+this.width,bottom:this.top+this.height}};this.handleEvent=data=>{if(data.type==="resize"){this.left=data.left;this.top=data.top;this.width=data.width;this.height=data.height;if(typeof this.proxied==="object"){this.proxied.style.width=this.width+"px";this.proxied.style.height=this.height+"px";this.proxied.clientWidth=this.width;this.proxied.clientHeight=this.height}}data.preventDefault=noop;data.stopPropagation=noop;this.dispatchEvent(data,this.proxied)};this.style={}}get clientWidth(){return this.width}get clientHeight(){return this.height}focus(){}};var ProxyManager=class{constructor(){this.targets={};this.makeProxy=(id,addTo=void 0)=>{if(!id)id=`proxyReceiver${Math.floor(Math.random()*1e15)}`;let proxy;if(this.targets[id])proxy=this.targets[id];else{proxy=new ElementProxyReceiver;this.targets[id]=proxy}if(typeof addTo==="object"){addTo.proxy=proxy;proxy.proxied=addTo;if(typeof WorkerGlobalScope!=="undefined")addTo.style=proxy.style;if(proxy.width){addTo.style.width=proxy.width+"px";addTo.clientWidth=proxy.width}if(proxy.height){addTo.style.height=proxy.height+"px";addTo.clientHeight=proxy.height}addTo.setPointerCapture=proxy.setPointerCapture.bind(proxy);addTo.releasePointerCapture=proxy.releasePointerCapture.bind(proxy);addTo.getBoundingClientRect=proxy.getBoundingClientRect.bind(proxy);addTo.addEventListener=proxy.addEventListener.bind(proxy);addTo.removeEventListener=proxy.removeEventListener.bind(proxy);addTo.handleEvent=proxy.handleEvent.bind(proxy);addTo.dispatchEvent=proxy.dispatchEvent.bind(proxy);addTo.focus=proxy.focus.bind(proxy)}};this.getProxy=id=>{return this.targets[id]};this.handleEvent=(data,id)=>{if(!this.targets[id])this.makeProxy(id);if(this.targets[id]){this.targets[id].handleEvent(data);return true}return void 0};if(!globalThis.document)globalThis.document={}}};function makeProxy(id,elm){if(this?._node?.graph){if(!this._node.graph.ProxyManager)this._node.graph.ProxyManager=new ProxyManager;this._node.graph.ProxyManager.makeProxy(id,elm)}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;globalThis.ProxyManager.makeProxy(id,elm)}return id}function handleProxyEvent(data,id){if(this?._node?.graph){if(!this._node.graph.ProxyManager)this._node.graph.ProxyManager=new ProxyManager;if(this._node.graph.ProxyManager.handleEvent(data,id))return data}else{if(!globalThis.ProxyManager)globalThis.ProxyManager=new ProxyManager;if(globalThis.ProxyManager.handleEvent(data,id))return data}}var proxyElementWorkerRoutes={initProxyElement,makeProxy,handleProxyEvent};function Renderer(options){if(options.worker){let worker=options.worker;let route=options.route;if(worker instanceof Blob||typeof worker==="string"){worker=new Worker(worker)}delete options.worker;delete options.route;return transferCanvas(worker,options,route)}else{initProxyElement(options.canvas,void 0,options._id);return setupCanvas(options)}}function transferCanvas(worker,options,route){if(!options)return void 0;if(!options._id)options._id=`canvas${Math.floor(Math.random()*1e15)}`;let offscreen=options.canvas.transferControlToOffscreen();if(!options.width)options.width=options.canvas.clientWidth;if(!options.height)options.height=options.canvas.clientHeight;let message={route:route?route:"setupCanvas",args:{...options,canvas:offscreen}};if(this?._node?.graph)this._node.graph.run("initProxyElement",options.canvas,worker,options._id);else initProxyElement(options.canvas,worker,options._id);if(options.draw){if(typeof options.draw==="function")message.args.draw=options.draw.toString();else message.args.draw=options.draw}if(options.update){if(typeof options.update==="function")message.args.update=options.update.toString();else message.args.update=options.update}if(options.init){if(typeof options.init==="function")message.args.init=options.init.toString();else message.args.init=options.init}if(options.clear){if(typeof options.clear==="function")message.args.clear=options.clear.toString();else message.args.clear=options.clear}let transfer=[offscreen];if(options.transfer){transfer.push(...options.transfer);delete options.transfer}worker.postMessage(message,transfer);const canvascontrols={_id:options._id,width:options.width,height:options.height,worker,draw:props=>{worker.postMessage({route:"drawFrame",args:[props,options._id]})},update:props=>{worker.postMessage({route:"updateCanvas",args:[props,options._id]})},clear:()=>{worker.postMessage({route:"clearCanvas",args:options._id})},init:()=>{worker.postMessage({route:"initCanvas",args:options._id})},stop:()=>{worker.postMessage({route:"stopAnim",args:options._id})},start:()=>{worker.postMessage({route:"startAnim",args:options._id})},set:newDrawProps=>{worker.postMessage({route:"setDraw",args:[newDrawProps,options._id]})},terminate:()=>{worker.terminate()}};return canvascontrols}function setDraw(settings,_id){let canvasopts;if(this?._node?.graph){if(_id)canvasopts=this._node.graph.CANVASES?.[settings._id];else if(settings._id)canvasopts=this._node.graph.CANVASES?.[settings._id];else canvasopts=this._node.graph.CANVASES?.[Object.keys(this._node.graph.CANVASES)[0]]}else{if(_id)canvasopts=globalThis.CANVASES?.[settings._id];else if(settings._id)canvasopts=globalThis.CANVASES?.[settings._id];else canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]]}if(canvasopts){if(settings.canvas){canvasopts.canvas=settings.canvas;if(this?._node?.graph)this._node.graph.run("makeProxy",canvasopts._id,canvasopts.canvas);else proxyElementWorkerRoutes.makeProxy(canvasopts._id,canvasopts.canvas)}if(typeof settings.context==="string")canvasopts.context=canvasopts.canvas.getContext(settings.context);else if(settings.context)canvasopts.context=settings.context;if(settings.width)canvasopts.canvas.width=settings.width;if(settings.height)canvasopts.canvas.height=settings.height;if(typeof settings.draw==="string")settings.draw=parseFunctionFromText(settings.draw);if(typeof settings.draw==="function"){canvasopts.draw=settings.draw}if(typeof settings.update==="string")settings.update=parseFunctionFromText(settings.update);if(typeof settings.update==="function"){canvasopts.update=settings.update}if(typeof settings.init==="string")settings.init=parseFunctionFromText(settings.init);if(typeof settings.init==="function"){canvasopts.init=settings.init}if(typeof settings.clear==="string")settings.clear=parseFunctionFromText(settings.clear);if(typeof settings.clear==="function"){canvasopts.clear=settings.clear}return settings._id}return void 0}function setupCanvas(options){if(this?._node?.graph){if(!this._node.graph.CANVASES)this._node.graph.CANVASES={}}else if(!globalThis.CANVASES)globalThis.CANVASES={};let canvasOptions=options;options._id?canvasOptions._id=options._id:canvasOptions._id=`canvas${Math.floor(Math.random()*1e15)}`;typeof options.context==="string"?canvasOptions.context=options.canvas.getContext(options.context):canvasOptions.context=options.context;"animating"in options?canvasOptions.animating=options.animating:canvasOptions.animating=true;if(this?._node?.graph?.CANVASES[canvasOptions._id]){this._node.graph.run("setDraw",canvasOptions)}else if(globalThis.CANVASES?.[canvasOptions._id]){setDraw(canvasOptions)}else{if(this?._node?.graph)canvasOptions.graph=this._node.graph;if(this?._node?.graph)this._node.graph.CANVASES[canvasOptions._id]=canvasOptions;else globalThis.CANVASES[canvasOptions._id]=canvasOptions;if(this?._node.graph)this._node.graph.run("makeProxy",canvasOptions._id,canvasOptions.canvas);else proxyElementWorkerRoutes.makeProxy(canvasOptions._id,canvasOptions.canvas);if(options.width)canvasOptions.canvas.width=options.width;if(options.height)canvasOptions.canvas.height=options.height;if(typeof canvasOptions.draw==="string"){canvasOptions.draw=parseFunctionFromText(canvasOptions.draw)}else if(typeof canvasOptions.draw==="function"){canvasOptions.draw=canvasOptions.draw}if(typeof canvasOptions.update==="string"){canvasOptions.update=parseFunctionFromText(canvasOptions.update)}else if(typeof canvasOptions.update==="function"){canvasOptions.update=canvasOptions.update}if(typeof canvasOptions.init==="string"){canvasOptions.init=parseFunctionFromText(canvasOptions.init)}else if(typeof canvasOptions.init==="function"){canvasOptions.init=canvasOptions.init}if(typeof canvasOptions.clear==="string"){canvasOptions.clear=parseFunctionFromText(canvasOptions.clear)}else if(typeof canvasOptions.clear==="function"){canvasOptions.clear=canvasOptions.clear}if(typeof canvasOptions.init==="function")canvasOptions.init(canvasOptions,canvasOptions.canvas,canvasOptions.context);canvasOptions.stop=()=>{stopAnim(canvasOptions._id)};canvasOptions.start=draw=>{startAnim(canvasOptions._id,draw)};canvasOptions.set=settings=>{setDraw(settings,canvasOptions._id)};if(typeof canvasOptions.draw==="function"&&canvasOptions.animating){let draw=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw(s,canvas,context)})}};draw(canvasOptions,canvasOptions.canvas,canvasOptions.context)}}if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope)return canvasOptions._id;else{const canvascontrols={_id:options._id,width:options.width,height:options.height,draw:props=>{drawFrame(props,options._id)},update:props=>{updateCanvas(props,options._id)},clear:()=>{clearCanvas(options._id)},init:()=>{initCanvas(options._id)},stop:()=>{stopAnim(options._id)},start:()=>{startAnim(options._id)},set:newDrawProps=>{setDraw(newDrawProps,options._id)},terminate:()=>{stopAnim(options._id)}};return canvascontrols}}function drawFrame(props,_id){let canvasopts;if(this?._node?.graph){if(!_id)canvasopts=this._node.graph.CANVASES?.[Object.keys(this._node.graph.CANVASES)[0]];else canvasopts=this._node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}if(canvasopts){if(props)Object.assign(canvasopts,props);if(canvasopts.draw){canvasopts.draw(canvasopts,canvasopts.canvas,canvasopts.context);return _id}}return void 0}function clearCanvas(_id){let canvasopts;if(this?._node?.graph){if(!_id)canvasopts=this._node.graph.CANVASES?.[Object.keys(this._node.graph.CANVASES)[0]];else canvasopts=this._node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}if(canvasopts?.clear){canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function initCanvas(_id){let canvasopts;if(this?._node?.graph){if(!_id)canvasopts=this._node.graph.CANVASES?.[Object.keys(this._node.graph.CANVASES)[0]];else canvasopts=this._node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}if(canvasopts?.init){canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function updateCanvas(input,_id){let canvasopts;if(this?._node?.graph){if(!_id)canvasopts=this._node.graph.CANVASES?.[Object.keys(this._node.graph.CANVASES)[0]];else canvasopts=this._node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}if(canvasopts?.update){canvasopts.update(canvasopts,canvasopts.canvas,canvasopts.context,input);return _id}return void 0}function setProps(props,_id){let canvasopts;if(this?._node?.graph){if(!_id)canvasopts=this._node.graph.CANVASES?.[Object.keys(this._node.graph.CANVASES)[0]];else canvasopts=this._node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}if(canvasopts){Object.assign(canvasopts,props);if(props.width)canvasopts.canvas.width=props.width;if(props.height)canvasopts.canvas.height=props.height;return _id}return void 0}function startAnim(_id,draw){let canvasopts;if(this?._node?.graph){if(!_id)canvasopts=this._node.graph.CANVASES?.[Object.keys(this._node.graph.CANVASES)[0]];else canvasopts=this._node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}canvasopts.animating=true;if(canvasopts&&draw){if(typeof draw==="string")draw=parseFunctionFromText(draw);if(typeof draw==="function"){canvasopts.draw=draw}return _id}if(typeof canvasopts?.draw==="function"){let draw2=(s,canvas,context)=>{if(s.animating){s.draw(s,canvas,context);requestAnimationFrame(()=>{draw2(s,canvas,context)})}};if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);if(typeof canvasopts.init==="function")canvasopts.init(canvasopts,canvasopts.canvas,canvasopts.context);draw2(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}function stopAnim(_id){let canvasopts;if(this?._node?.graph){if(!_id)canvasopts=this._node.graph.CANVASES?.[Object.keys(this._node.graph.CANVASES)[0]];else canvasopts=this._node.graph.CANVASES?.[_id]}else{if(!_id)canvasopts=globalThis.CANVASES?.[Object.keys(globalThis.CANVASES)[0]];else canvasopts=globalThis.CANVASES?.[_id]}if(canvasopts){canvasopts.animating=false;if(typeof canvasopts.clear==="function")canvasopts.clear(canvasopts,canvasopts.canvas,canvasopts.context);return _id}return void 0}var workerCanvasRoutes={...proxyElementWorkerRoutes,Renderer,transferCanvas,setupCanvas,setDraw,drawFrame,clearCanvas,initCanvas,updateCanvas,setProps,startAnim,stopAnim};function parseFunctionFromText(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}function parseFunctionFromText2(method=""){let getFunctionBody=methodString=>{return methodString.replace(/^\W*(function[^{]+\{([\s\S]*)\}|[^=]+=>[^{]*\{([\s\S]*)\}|[^=]+=>(.+))/i,"$2$3$4")};let getFunctionHead=methodString=>{let startindex=methodString.indexOf("=>")+1;if(startindex<=0){startindex=methodString.indexOf("){")}if(startindex<=0){startindex=methodString.indexOf(") {")}return methodString.slice(0,methodString.indexOf("{",startindex)+1)};let newFuncHead=getFunctionHead(method);let newFuncBody=getFunctionBody(method);let newFunc;if(newFuncHead.includes("function")){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody)}else{if(newFuncHead.substring(0,6)===newFuncBody.substring(0,6)){let varName=newFuncHead.split("(")[1].split(")")[0];newFunc=new Function(varName,newFuncBody.substring(newFuncBody.indexOf("{")+1,newFuncBody.length-1))}else{try{newFunc=(0,eval)(newFuncHead+newFuncBody+"}")}catch{}}}return newFunc}var stringifyWithCircularRefs=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx--}}}}function checkCircular(key,value){if(value!=null){if(typeof value==="object"){if(key){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}}}return value}return function stringifyWithCircularRefs2(obj,space){try{parents.push(obj);return JSON.stringify(obj,checkCircular,space)}finally{clear()}}}();if(JSON.stringifyWithCircularRefs===void 0){JSON.stringifyWithCircularRefs=stringifyWithCircularRefs}var stringifyFast=function(){const refs=new Map;const parents=[];const path=["this"];function clear(){refs.clear();parents.length=0;path.length=1}function updateParents(key,value){var idx=parents.length-1;if(parents[idx]){var prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value||idx===0){path.push(key);parents.push(value.pushed)}else{while(idx-->=0){prev=parents[idx];if(typeof prev==="object"){if(prev[key]===value){idx+=2;parents.length=idx;path.length=idx;--idx;parents[idx]=value;path[idx]=key;break}}idx++}}}}}function checkValues(key,value){let val;if(value!=null){if(typeof value==="object"){let c=value.constructor.name;if(key&&c==="Object"){updateParents(key,value)}let other=refs.get(value);if(other){return"[Circular Reference]"+other}else{refs.set(value,path.join("."))}if(c==="Array"){if(value.length>20){val=value.slice(value.length-20)}else val=value}else if(c.includes("Set")){val=Array.from(value)}else if(c!=="Object"&&c!=="Number"&&c!=="String"&&c!=="Boolean"){val="instanceof_"+c}else if(c==="Object"){let obj={};for(const prop in value){if(value[prop]==null){obj[prop]=value[prop]}else if(Array.isArray(value[prop])){if(value[prop].length>20)obj[prop]=value[prop].slice(value[prop].length-20);else obj[prop]=value[prop]}else if(value[prop].constructor.name==="Object"){obj[prop]={};for(const p in value[prop]){if(Array.isArray(value[prop][p])){if(value[prop][p].length>20)obj[prop][p]=value[prop][p].slice(value[prop][p].length-20);else obj[prop][p]=value[prop][p]}else{if(value[prop][p]!=null){let con=value[prop][p].constructor.name;if(con.includes("Set")){obj[prop][p]=Array.from(value[prop][p])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop][p]="instanceof_"+con}else{obj[prop][p]=value[prop][p]}}else{obj[prop][p]=value[prop][p]}}}}else{let con=value[prop].constructor.name;if(con.includes("Set")){obj[prop]=Array.from(value[prop])}else if(con!=="Number"&&con!=="String"&&con!=="Boolean"){obj[prop]="instanceof_"+con}else{obj[prop]=value[prop]}}}val=obj}else{val=value}}else{val=value}}return val}return function stringifyFast2(obj,space){parents.push(obj);let res=JSON.stringify(obj,checkValues,space);clear();return res}}();if(JSON.stringifyFast===void 0){JSON.stringifyFast=stringifyFast}var unsafeRoutes={setRoute:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText2(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this._node.graph.get(fnName)){this._node.graph.get(fnName)._setOperator(fn)}else{let node=this._node.graph.add({_node:{tag:fnName,operator:fn}})}return true}return false},setNode:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText2(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this._node.graph.get(fnName)){this._node.graph.get(fnName)._setOperator(fn)}else this._node.graph.add({_node:{tag:fnName,operator:fn}});return true}return false},setMethod:function(route,fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText2(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;if(this._node.graph.get(route)){this._node.graph.get(route)[fnName]=fn}else this._node.graph.add({_node:{tag:fnName,[fnName]:fn}});return true}return false},assignRoute:function(route,source){if(this._node.graph.get(route)&&typeof source==="object"){Object.assign(this._node.graph.get(route),source)}},transferClass:(classObj,className)=>{if(typeof classObj==="object"){let str=classObj.toString();let message={route:"receiveClass",args:[str,className]};return message}return false},receiveClass:function(stringified,className){if(typeof stringified==="string"){if(stringified.indexOf("class")===0){let cls=(0,eval)("("+stringified+")");let name=className;if(!name)name=cls.name;this._node.graph[name]=cls;return true}}return false},setGlobal:(key,value)=>{globalThis[key]=value;return true},assignGlobalObject:(target,source)=>{if(!globalThis[target])return false;if(typeof source==="object")Object.assign(globalThis[target],source);return true},setValue:function(key,value){this._node.graph[key]=value;return true},assignObject:function(target,source){if(!this._node.graph[target])return false;if(typeof source==="object")Object.assign(this._node.graph[target],source);return true},setGlobalFunction:(fn,fnName)=>{if(typeof fn==="string")fn=parseFunctionFromText2(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;globalThis[fnName]=fn;return true}return false},assignFunctionToGlobalObject:function(globalObjectName,fn,fnName){if(!globalThis[globalObjectName])return false;if(typeof fn==="string")fn=parseFunctionFromText2(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this._node.graph[globalObjectName][fnName]=fn;return true}return false},setFunction:function(fn,fnName){if(typeof fn==="string")fn=parseFunctionFromText2(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this._node.graph[fnName]=fn;return true}return false},assignFunctionToObject:function(objectName,fn,fnName){if(!this._node.graph[objectName])return false;if(typeof fn==="string")fn=parseFunctionFromText2(fn);if(typeof fn==="function"){if(!fnName)fnName=fn.name;this._node.graph[objectName][fnName]=fn;return true}return false}};var ECSService=class extends Service{constructor(options){super(options);this.entities={};this.systems={};this.entityMap=new Map;this.entityKeyMap=new Map;this.order=[];this.animating=false;this.entityCt=0;this.systemCt=0;this.updateEntities=(order=this.order,filter,debug=false)=>{order.forEach(k=>{if(this.systems[k]){if(filter){if(debug)debug=performance.now();if(this.entityKeyMap.get(k).length>0)this.systems[k]._node.operator(this.entityMap.get(k));if(debug)console.log("system",k,"took",performance.now()-debug,"ms for",Object.keys(this.entityMap.get(k)).length,"entities")}else{if(debug)debug=performance.now();if(this.entityKeyMap.get(k).length>0)this.systems[k]._node.operator(this.entities);if(debug)console.log("system",k,"took",performance.now()-debug,"ms for",Object.keys(this.entities).length,"entities")}}})};this.animateEntities=(filter=true,order)=>{if(!this.animating){this.animating=true;if(typeof requestAnimationFrame!=="undefined"){let anim=()=>{requestAnimationFrame(()=>{if(this.animating){this.updateEntities(order,filter);anim()}})};anim()}else{let looper=()=>{setTimeout(async()=>{if(this.animating){this.updateEntities(order,filter);looper()}},10)};looper()}}};this.stop=()=>{this.animating=false};this.start=filter=>{this.animateEntities(filter)};this.addEntities=(prototype,components={},count=1)=>{let i=0;let newEntities={};while(i<count){let entity=this.addEntity(prototype,components);newEntities[entity._node.tag]=entity;i++}return Object.keys(newEntities)};this.addEntity=(prototype={},components={})=>{if(!prototype)return;const entity=this.recursivelyAssign({},prototype);entity.components=components;if(Object.keys(components).length===0){Object.keys(this.systems).forEach(k=>{components[k]=true})}if(!entity._node)entity._node={};if(entity._node.tag&&this.entities[entity._node.tag]){this.entityCt++;let tag=entity._node.tag+this.entityCt;while(this.entities[entity._node.tag]){this.entityCt++;entity._node.tag=`${tag}${this.entityCt}`}}else if(!entity._node.tag)entity._node.tag=`entity${Math.floor(Math.random()*1e15)}`;this.add(entity);this.entities[entity._node.tag]=this._node.nodes.get(entity._node.tag);this.setupEntity(this.entities[entity._node.tag]);return this.entities[entity._node.tag]};this.addSystems=(systems={},order)=>{for(const key in systems){systems[key]._node.tag=key;this.addSystem(systems[key],void 0,void 0,void 0,void 0,order)}return this.systems};this.addSystem=(prototype,setupEntities,setupEntity,operator,remove,order)=>{if(!prototype)return;const system=this.recursivelyAssign({},prototype);if(setupEntities)system.setupEntities=setupEntities;if(setupEntity)system.setupEntity=setupEntity;if(operator)system._node.operator=operator;if(remove)system.remove=remove;if(system._node.tag&&this.systems[system._node.tag]){this.systemCt++;let tag=system._node.tag+this.systemCt;while(this.systems[system._node.tag]){this.systemCt++;system._node.tag=`${tag}${this.systemCt}`}}else if(!system._node.tag)system._node.tag=`system${Math.floor(Math.random()*1e15)}`;this.add(system);this.systems[system._node.tag]=this._node.nodes.get(system._node.tag);if(!this.entityMap.get(system._node.tag))this.entityMap.set(system._node.tag,{});if(!this.entityKeyMap.get(system._node.tag))this.entityKeyMap.set(system._node.tag,[]);this.systems[system._node.tag].entities=this.entityMap.get(system._node.tag);this.systems[system._node.tag].entityKeys=this.entityKeyMap.get(system._node.tag);if(this.systems[system._node.tag]?.setupEntities&&Object.keys(this.entities).length>1){let filtered=this.filterObject(this.entities,(key,v)=>{if(v.components[system._node.tag])return true});this.systems[system._node.tag].setupEntities(filtered);Object.assign(this.entityMap.get(system._node.tag),filtered)}if(!order)this.order.push(system._node.tag);else this.order=order;return this.systems[system._node.tag]};this.setupEntity=entity=>{if(entity?.components){for(const key in entity.components){if(this.systems[key]){this.systems[key].setupEntity(entity);this.entityMap.get(key)[entity._node.tag]=entity;this.entityKeyMap.get(key).push(entity._node.tag)}}}};this.removeEntity=tag=>{const entity=this.entities[tag];for(const key in entity.components){if(this.entityMap.get(key)){delete this.entityMap.get(key)[entity._node.tag];this.entityKeyMap.get(key).splice(this.entityKeyMap.get(key).indexOf(entity._node.tag),1)}if(this.systems[key]?.remove){this.systems[key].remove(entity,this.entityMap.get(key))}}delete this.entities[tag];return this.remove(tag)};this.removeSystem=tag=>{if(this.systems[tag]?.remove){for(const e in this.entityKeyMap.get(tag)){this.systems[tag].remove(this.entityMap.get(tag)[e],this.entityMap.get(tag))}}delete this.systems[tag];this.entityMap.delete(tag);this.entityKeyMap.delete(tag);this.order.splice(this.order.indexOf(tag),1);return this.remove(tag)};this.setEntities=(entities,props)=>{if(Array.isArray(entities)){entities.forEach(k=>{if(this.entities[k])this.recursivelyAssign(this.entities[k],props)})}else{for(const key in this.entities){this.setEntity(this.entities[key],props)}}return true};this.setEntity=(entity,props)=>{return this.recursivelyAssign(entity,props)};this.bufferValues=(entities,property,keys,buffer)=>{if(!Array.isArray(keys)&&typeof keys==="object")keys=Object.keys(keys);if(!buffer){let entkeys=Object.keys(entities);if(keys)buffer=new Float32Array(entkeys.length*keys.length);else{if(typeof entities[entkeys[0]][property]==="object"){keys=Object.keys(entities[entkeys[0]][property]);buffer=new Float32Array(entkeys.length*keys.length)}else buffer=new Float32Array(entkeys.length)}}let i=0;for(const key in entities){if(entities[key][property]){if(keys){for(let j=0;j<keys.length;j++){buffer[i]=entities[key][property][keys[j]];i++}}else{buffer[i]=entities[key][property];i++}}}return buffer};this.setTree(this);if(options?.systems)for(const key in options.systems){this.addSystem(options.systems[key],void 0,void 0,void 0,void 0,options.order)}if(options?.entities){for(const key in options.entities){this.addEntity(options.entities[key],options.entities[key].components)}}}removeEntities(entities){if(!Array.isArray(entities))entities=Object.keys(entities);entities.forEach(t=>{this.removeEntity(t)})}filterObject(o,filter){return Object.fromEntries(Object.entries(o).filter(([key,value])=>{filter(key,value)}))}};if(typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope){self.SERVICE=new WorkerService({services:{workerCanvasRoutes,ECSService,unsafeRoutes}})}var Worker_default=self;})();
